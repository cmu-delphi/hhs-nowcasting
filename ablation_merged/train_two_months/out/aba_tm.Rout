
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> "
+ Ablation: train on two most recent months of data. Unweighted.
+ "
[1] "\nAblation: train on two most recent months of data. Unweighted.\n"
> 
> source("assets_tm_monthlyup/data_load_mu.R")

Attaching package: ‘epiprocess’

The following object is masked from ‘package:stats’:

    filter


Attaching package: ‘lubridate’

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union


Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Rows: 47941871 Columns: 9
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): geo_value
dbl  (6): lag, value_covid, value_total, sum_covid, sum_total, weekly_in_ratio
date (2): issue_date, time_value

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Rows: 36836755 Columns: 10
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): geo_value
dbl  (6): lag, value_covid, value_total, sum_covid, sum_total, weekly_out_ratio
date (3): issue_date, time_value, end

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Rows: 55578 Columns: 4
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): geo_value
dbl  (1): GT
date (2): time_value, issue_date

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Rows: 496438 Columns: 5
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): geo_value
dbl  (2): one_day, hosp_7dav
date (2): issue_date, time_value

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> source("assets_tm_monthlyup/uncon_state.R")
> source("assets_tm_monthlyup/uncon_national.R")
> 
> gammas = 0
> alphas = signif(seq(0, 1, length.out = 51))
> 
> cadence = 30
> offset = 120
> vl = 2
> 
> 
> 
> back_2 = c()
> val_frame = c()
> val_gamma = c()
> 
> max_lag = 19
> 
> state_model_coef = c()
> national_model_coef = c()
> 
> 
> dump_dates = c(as.Date("2021-04-01"), as.Date("2021-05-01"), as.Date("2021-06-01"), 
+                as.Date("2021-07-01"), as.Date("2021-08-01"), as.Date("2021-09-01"),
+                as.Date("2021-10-01"), as.Date("2021-11-01"), as.Date("2021-12-01")) 
> 
> dump_dates = dump_dates - 1
> 
> 
> 
> for (window_date in dump_dates) {
+   
+   
+   # The part where we change things
+   # Here we will iterate through time points in prediction set + 30 days
+   # This means for all `time_value` in the test set, we would have `backcast_lag` 
+   # up to 30
+   # On day T before end of month, we will produce nowcast \hat{Y}_{T}^{(T)} and a 
+   # bunch of trailing nowcasts \hat{Y}_{< T}^{(T)}
+   # If at end of month, get feature for whole month with newer version 
+   # (`issue_date`) after end of month
+   # `window_date`: last observation before test set 
+   # that can be used to fit the model
+   # So `window_date` contains 60 days of validation data
+   
+   max_date = as.numeric(as.Date("2022-07-31") - window_date) - 1
+   print(max_date)
+   
+   
+   if (max_date == 0) {
+     
+     break
+     
+   }
+   
+   # Iterating through test set 
+   # Adhering to hypothetical that we are not looking at
+   # predictions with backcast_lag = 30 for the entirety 
+   # of test set
+   for (i in seq(1, min(50, max_date))) {
+     
+     
+     # In each day in test, we first calibrate
+     # Then produce
+     
+     # Preparing for calibrating FV here.
+     # You are not observing new labels of hosp
+     # So you are training with updated versions of features
+     
+     # Subsetting so that we dont see val set 
+     train_end = window_date - vl * cadence 
+     # Prevent intersection with previous test
+     test_start = window_date + 1 
+     test_start = as.Date(test_start, "1970-01-01")
+     
+     # Don't see new labels, but see updated features
+     version = window_date + i
+     version = as.Date(version, "1970-01-01")
+     
+     # state level val frame 
+     state_val_frame = state_produce_fv(gammas, train_end, version)
+     
+     # National level val frame 
+     national_val_frame = national_produce_fv(gammas, train_end, version)
+     
+     if (nrow(state_val_frame) == 0) {
+       
+       break
+       
+     }
+     
+     # Make sure test predictions are out of sample
+     stopifnot(state_val_frame$time_value <= as.Date(test_start, "1970-01-01"))
+     
+     
+     # Select FV gamma and retrain
+     # Two levels: state and national level
+     # No more subsetting: `produce_fv` only produces 2 months of FV data
+     state_val_gamma = state_val_frame %>%
+       group_by(geo_value, gamma) %>%
+       summarise(MAE = mean(abs(.resid))) %>%
+       mutate(Min = min(MAE)) %>%
+       filter(MAE == Min) %>%
+       select(geo_value, gamma)
+     
+     
+     national_gamma = national_val_frame %>%
+       group_by(gamma) %>%
+       summarise(MAE = mean(abs(.resid))) %>%
+       mutate(Min = min(MAE)) %>%
+       filter(MAE == Min) %>%
+       select(gamma)
+     
+     # Refit, this time using all the data, with `window_date` as cutoff
+     # State level
+     state_train = state_get_train_ar(window_date, version) %>%
+       group_by(geo_value) %>%
+       merge(state_val_gamma, by = "geo_value")
+     
+     national_train = national_get_train_ar(window_date, version) %>%
+       ungroup() %>%
+       mutate(ng = national_gamma$gamma)
+     
+     
+     # We have changed our model to be autoregressive
+     state_selected_models = state_train %>%
+       group_by(geo_value) %>%
+       do(model = lm(GT ~ in_6 + in_13 + in_20 + out_6 + out_13 + out_20, 
+                     weights = exp(-gamma * backcast_lag) / max(exp(-gamma * backcast_lag)),
+                     data = .))
+     
+     national_selected_models = lm(GT ~ in_6 + in_13 + in_20 + out_6 + out_13 + out_20, 
+                     weights = exp(-ng * backcast_lag) / max(exp(-ng * backcast_lag)),
+                     data = national_train)
+     
+     
+     # After selection and retrain, store the models with `geo_value` and `issue_date`
+     # It is important to store the RETRAINED coefficents
+     state_selected_tmp = state_selected_models %>%
+       group_by(geo_value) %>%
+       group_modify(~ bind_rows(coef(.$model[[1]]))) %>%
+       mutate(issue_date = as.Date(version, "1970-01-01"))
+     
+     state_model_coef = rbind(state_model_coef, state_selected_tmp)
+     
+     # national_selected_tmp = national_selected_models %>%
+     #   summarise(~ bind_rows(coef(national_selected_models))) %>%
+     #   mutate(issue_date = as.Date(version, "1970-01-01"))
+     
+     national_model_coef = rbind(national_model_coef, c(national_selected_models$coefficients, 
+       as.Date(version, "1970-01-01")))
+     
+     
+     
+     
+     # Find alphas now
+     mixed_val_frame = alpha_fv(alphas, state_val_frame, national_val_frame, state_val_gamma, national_gamma)
+     opt_alpha = mixed_val_frame %>%
+       group_by(geo_value, alpha) %>%
+       summarise(MAE = mean(.resid)) %>%
+       mutate(Min = min(MAE)) %>%
+       filter(MAE == Min) %>%
+       rename(optimal = alpha) %>%
+       select(geo_value, optimal)
+     
+     
+     # Stay in monthly update
+     state_test = state_get_test_backnow_raw(test_start, version) %>%
+       filter(time_value <= as.Date("2021-12-01"))
+     national_test = national_get_test_backnow_raw(test_start, version) %>%
+       filter(time_value <= as.Date("2021-12-01"))
+     
+     
+     # If not test points at all, next date in test time
+     if (nrow(state_test) == 0 || is.null(state_test)) {
+       next
+     }
+     
+     # Another round of making sure out of sample
+     stopifnot(max(state_val_frame$time_value) <= min(state_test$time_value))
+     stopifnot(max(state_train$time_value) <= min(state_test$time_value))
+     
+     # Use inner_join to avoid problems in null data
+     # So that you don't actually predict training samples...
+     state_test = state_test %>%
+       group_by(geo_value) %>%
+       nest() %>%
+       inner_join(state_selected_models) %>%
+       verify(nrow(.) != 0)
+     
+     national_test = national_test %>%
+       mutate(national_fit = predict(national_selected_models, newdata = .)) %>%
+       verify(nrow(.) != 0)
+     
+ 
+     state_Tested = state_test %>%
+       do(augment(.$model[[1]], newdata = .$data[[1]])) %>%
+       rename(state_fit = .fitted) %>%
+       select(geo_value, time_value, issue_date, state_fit, GT)
+     
+     national_Tested = national_test %>%
+       select(geo_value, time_value, issue_date, national_fit)
+ 
+         
+     Tested = state_Tested %>%
+       inner_join(national_Tested, by = c("geo_value", "time_value", "issue_date")) %>%
+       inner_join(opt_alpha, by = "geo_value") %>%
+ 
+       group_by(geo_value) %>%
+       mutate(mixed_pred = optimal * state_fit + (1 - optimal) * national_fit) %>%
+       mutate(staleness = as.numeric(time_value - window_date))
+     
+     
+     back_2 = rbind(back_2, Tested)
+     
+   }
+   
+   
+   
+ }
[1] 486
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
[1] 456
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
[1] 425
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
[1] 395
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
[1] 364
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
[1] 333
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
[1] 303
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
[1] 272
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
[1] 242
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
> 
> 
> "
+ No update part 
+ "
[1] "\nNo update part \n"
> 
> source("assets_tm_noup/data_load_noup.R")
Rows: 47941871 Columns: 9
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): geo_value
dbl  (6): lag, value_covid, value_total, sum_covid, sum_total, weekly_in_ratio
date (2): issue_date, time_value

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Rows: 36836755 Columns: 10
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): geo_value
dbl  (6): lag, value_covid, value_total, sum_covid, sum_total, weekly_out_ratio
date (3): issue_date, time_value, end

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Rows: 55578 Columns: 4
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): geo_value
dbl  (1): GT
date (2): time_value, issue_date

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Rows: 496438 Columns: 5
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): geo_value
dbl  (2): one_day, hosp_7dav
date (2): issue_date, time_value

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> source("assets_tm_noup/uncon_state.R")
> source("assets_tm_noup/uncon_national.R")
> 
> 
> 
> omi_start = as.Date("2021-11-30")
> end_date = as.Date("2023-08-01")
> gammas = 0
> alphas = signif(seq(0, 1, length.out = 51))
> 
> cadence = 30
> offset = 120
> vl = 2
> 
> state_model_coef = c()
> national_model_coef = c()
> 
> val_frame = c()
> val_gamma = c()
> 
> # Still need to iterate through all dates, with the exception of no retraining after
> # 30 days of beginning of start of omicron
> # NOTE: Still need to produce backcasts
> 
> for (d in seq(omi_start + 1, end_date, by = 1)) {
+   
+   "  
+   If less than 30 days after start, still retrain
+   "
+   if (d <= omi_start + 30) {
+     
+     # Train end is always the same in oneshot setting
+     train_end = omi_start - vl * cadence
+     test_start = omi_start + 1
+     
+     version = as.Date(d, "1970-01-01")
+     
+     # state level val frame 
+     state_val_frame = state_produce_fv(gammas, train_end, version)
+     
+     # National level val frame 
+     national_val_frame = national_produce_fv(gammas, train_end, version)
+     
+     if (nrow(state_val_frame) == 0) {
+       
+       break
+       
+     }
+     
+     # Make sure test predictions are out of sample
+     stopifnot(state_val_frame$time_value <= as.Date(test_start, "1970-01-01"))
+     
+     
+     # Select FV gamma and retrain
+     # Two levels: state and national level
+     # No more subsetting: `produce_fv` only produces 2 months of FV data
+     state_val_gamma = state_val_frame %>%
+       group_by(geo_value, gamma) %>%
+       summarise(MAE = mean(abs(.resid))) %>%
+       mutate(Min = min(MAE)) %>%
+       filter(MAE == Min) %>%
+       select(geo_value, gamma)
+     
+     
+     national_gamma = national_val_frame %>%
+       group_by(gamma) %>%
+       summarise(MAE = mean(abs(.resid))) %>%
+       mutate(Min = min(MAE)) %>%
+       filter(MAE == Min) %>%
+       select(gamma)
+     
+     # Refit, this time using all the data, with `omi_start` as cutoff
+     # Becuase no future labels are made available to us
+     # State level
+     state_train = state_get_train_ar(omi_start, version) %>%
+       group_by(geo_value) %>%
+       merge(state_val_gamma, by = "geo_value")
+     
+     national_train = national_get_train_ar(omi_start, version) %>%
+       ungroup() %>%
+       mutate(ng = national_gamma$gamma)
+     
+     
+     # We have changed our model to be autoregressive
+     state_selected_models = state_train %>%
+       group_by(geo_value) %>%
+       do(model = lm(GT ~ in_6 + in_13 + in_20 + out_6 + out_13 + out_20, 
+                     weights = exp(-gamma * backcast_lag) / max(exp(-gamma * backcast_lag)),
+                     data = .))
+     
+     national_selected_models = lm(GT ~ in_6 + in_13 + in_20 + out_6 + out_13 + out_20, 
+                     weights = exp(-ng * backcast_lag) / max(exp(-ng * backcast_lag)),
+                     data = national_train)
+     
+     
+         # After selection and retrain, store the models with `geo_value` and `issue_date`
+     # It is important to store the RETRAINED coefficents
+     state_selected_tmp = state_selected_models %>%
+       group_by(geo_value) %>%
+       group_modify(~ bind_rows(coef(.$model[[1]]))) %>%
+       mutate(issue_date = as.Date(version, "1970-01-01"))
+     
+     state_model_coef = rbind(state_model_coef, state_selected_tmp)
+     
+     # national_selected_tmp = national_selected_models %>%
+     #   summarise(~ bind_rows(coef(national_selected_models))) %>%
+     #   mutate(issue_date = as.Date(version, "1970-01-01"))
+     
+     national_model_coef = rbind(national_model_coef, c(national_selected_models$coefficients, 
+       as.Date(version, "1970-01-01")))
+     
+     
+     
+     # After selection and retrain, store the models with `geo_value` and `issue_date`
+     # It is important to store the RETRAINED coefficents
+     state_selected_tmp = state_selected_models %>%
+       group_by(geo_value) %>%
+       group_modify(~ bind_rows(coef(.$model[[1]]))) %>%
+       mutate(issue_date = as.Date(version, "1970-01-01"))
+     
+     
+     
+     # Find alphas now
+     mixed_val_frame = alpha_fv(alphas, state_val_frame, national_val_frame, state_val_gamma, national_gamma)
+     opt_alpha = mixed_val_frame %>%
+       group_by(geo_value, alpha) %>%
+       summarise(MAE = mean(.resid)) %>%
+       mutate(Min = min(MAE)) %>%
+       filter(MAE == Min) %>%
+       rename(optimal = alpha) %>%
+       select(geo_value, optimal)
+     
+     
+     
+     state_test = state_get_test_backnow_raw(test_start, version)
+     national_test = national_get_test_backnow_raw(test_start, version)
+     
+     # If not test points at all, next date in test time
+     if (nrow(state_test) == 0 || is.null(state_test)) {
+       next
+     }
+     
+     # Another round of making sure out of sample
+     stopifnot(max(state_val_frame$time_value) <= min(state_test$time_value))
+     stopifnot(max(state_train$time_value) <= min(state_test$time_value))
+     
+     # Use inner_join to avoid problems in null data
+     # So that you don't actually predict training samples...
+     state_test = state_test %>%
+       group_by(geo_value) %>%
+       nest() %>%
+       inner_join(state_selected_models) %>%
+       verify(nrow(.) != 0)
+     
+     national_test = national_test %>%
+       mutate(national_fit = predict(national_selected_models, newdata = .)) %>%
+       verify(nrow(.) != 0)
+     
+ 
+     state_Tested = state_test %>%
+       do(augment(.$model[[1]], newdata = .$data[[1]])) %>%
+       rename(state_fit = .fitted) %>%
+       select(geo_value, time_value, issue_date, state_fit, GT)
+     
+     national_Tested = national_test %>%
+       select(geo_value, time_value, issue_date, national_fit)
+     
+     Tested = state_Tested %>%
+       inner_join(national_Tested, by = c("geo_value", "time_value", "issue_date")) %>%
+       inner_join(opt_alpha, by = "geo_value") %>%
+       group_by(geo_value) %>%
+       mutate(mixed_pred = optimal * state_fit + (1 - optimal) * national_fit) %>%
+       mutate(staleness = as.numeric(time_value - omi_start))
+     
+     
+     back_2 = rbind(back_2, Tested)
+     
+   }
+   
+   else {
+     
+     "    
+     30 days later, everything is now considered to be finalized
+     No more retraining now
+     "
+ 
+     version = as.Date(d, "1970-01-01")
+     
+     print(as.Date(d, "1970-01-01"))
+     
+ 
+     state_test = state_get_test_oneshot_impute(version)
+     national_test = national_get_test_oneshot_impute(version)
+     
+     # If not test points at all, next date in test time
+     if (nrow(state_test) == 0 || is.null(state_test)) {
+       next
+     }
+       
+       
+       
+     state_test = state_test %>%
+       group_by(geo_value) %>%
+       nest() %>%
+       inner_join(state_selected_models) %>%
+       verify(nrow(.) != 0)
+     
+     national_test = national_test %>%
+       mutate(national_fit = predict(national_selected_models, newdata = .)) %>%
+       verify(nrow(.) != 0)
+   
+   
+     state_Tested = state_test %>%
+       do(augment(.$model[[1]], newdata = .$data[[1]])) %>%
+       rename(state_fit = .fitted) %>%
+       select(geo_value, time_value, issue_date, state_fit, GT)
+     
+     national_Tested = national_test %>%
+       select(geo_value, time_value, issue_date, national_fit)
+     
+     Tested = state_Tested %>%
+       inner_join(national_Tested, by = c("geo_value", "time_value", "issue_date")) %>%
+       inner_join(opt_alpha, by = "geo_value") %>%
+       group_by(geo_value) %>%
+       mutate(mixed_pred = optimal * state_fit + (1 - optimal) * national_fit) %>%
+       mutate(staleness = as.numeric(time_value - omi_start))
+     
+     
+     back_2 = rbind(back_2, Tested)
+     
+   }
+   
+ }
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
[1] "2021-12-31"
Joining with `by = join_by(geo_value)`
[1] "2022-01-01"
Joining with `by = join_by(geo_value)`
[1] "2022-01-02"
Joining with `by = join_by(geo_value)`
[1] "2022-01-03"
Joining with `by = join_by(geo_value)`
[1] "2022-01-04"
Joining with `by = join_by(geo_value)`
[1] "2022-01-05"
Joining with `by = join_by(geo_value)`
[1] "2022-01-06"
Joining with `by = join_by(geo_value)`
[1] "2022-01-07"
Joining with `by = join_by(geo_value)`
[1] "2022-01-08"
Joining with `by = join_by(geo_value)`
[1] "2022-01-09"
Joining with `by = join_by(geo_value)`
[1] "2022-01-10"
Joining with `by = join_by(geo_value)`
[1] "2022-01-11"
Joining with `by = join_by(geo_value)`
[1] "2022-01-12"
Joining with `by = join_by(geo_value)`
[1] "2022-01-13"
Joining with `by = join_by(geo_value)`
[1] "2022-01-14"
Joining with `by = join_by(geo_value)`
[1] "2022-01-15"
Joining with `by = join_by(geo_value)`
[1] "2022-01-16"
Joining with `by = join_by(geo_value)`
[1] "2022-01-17"
Joining with `by = join_by(geo_value)`
[1] "2022-01-18"
Joining with `by = join_by(geo_value)`
[1] "2022-01-19"
Joining with `by = join_by(geo_value)`
[1] "2022-01-20"
Joining with `by = join_by(geo_value)`
[1] "2022-01-21"
Joining with `by = join_by(geo_value)`
[1] "2022-01-22"
Joining with `by = join_by(geo_value)`
[1] "2022-01-23"
Joining with `by = join_by(geo_value)`
[1] "2022-01-24"
Joining with `by = join_by(geo_value)`
[1] "2022-01-25"
Joining with `by = join_by(geo_value)`
[1] "2022-01-26"
Joining with `by = join_by(geo_value)`
[1] "2022-01-27"
Joining with `by = join_by(geo_value)`
[1] "2022-01-28"
Joining with `by = join_by(geo_value)`
[1] "2022-01-29"
Joining with `by = join_by(geo_value)`
[1] "2022-01-30"
Joining with `by = join_by(geo_value)`
[1] "2022-01-31"
Joining with `by = join_by(geo_value)`
[1] "2022-02-01"
Joining with `by = join_by(geo_value)`
[1] "2022-02-02"
Joining with `by = join_by(geo_value)`
[1] "2022-02-03"
Joining with `by = join_by(geo_value)`
[1] "2022-02-04"
Joining with `by = join_by(geo_value)`
[1] "2022-02-05"
Joining with `by = join_by(geo_value)`
[1] "2022-02-06"
Joining with `by = join_by(geo_value)`
[1] "2022-02-07"
Joining with `by = join_by(geo_value)`
[1] "2022-02-08"
Joining with `by = join_by(geo_value)`
[1] "2022-02-09"
Joining with `by = join_by(geo_value)`
[1] "2022-02-10"
Joining with `by = join_by(geo_value)`
[1] "2022-02-11"
Joining with `by = join_by(geo_value)`
[1] "2022-02-12"
Joining with `by = join_by(geo_value)`
[1] "2022-02-13"
Joining with `by = join_by(geo_value)`
[1] "2022-02-14"
Joining with `by = join_by(geo_value)`
[1] "2022-02-15"
Joining with `by = join_by(geo_value)`
[1] "2022-02-16"
Joining with `by = join_by(geo_value)`
[1] "2022-02-17"
Joining with `by = join_by(geo_value)`
[1] "2022-02-18"
Joining with `by = join_by(geo_value)`
[1] "2022-02-19"
Joining with `by = join_by(geo_value)`
[1] "2022-02-20"
Joining with `by = join_by(geo_value)`
[1] "2022-02-21"
Joining with `by = join_by(geo_value)`
[1] "2022-02-22"
Joining with `by = join_by(geo_value)`
[1] "2022-02-23"
Joining with `by = join_by(geo_value)`
[1] "2022-02-24"
Joining with `by = join_by(geo_value)`
[1] "2022-02-25"
Joining with `by = join_by(geo_value)`
[1] "2022-02-26"
Joining with `by = join_by(geo_value)`
[1] "2022-02-27"
Joining with `by = join_by(geo_value)`
[1] "2022-02-28"
Joining with `by = join_by(geo_value)`
[1] "2022-03-01"
Joining with `by = join_by(geo_value)`
[1] "2022-03-02"
Joining with `by = join_by(geo_value)`
[1] "2022-03-03"
Joining with `by = join_by(geo_value)`
[1] "2022-03-04"
Joining with `by = join_by(geo_value)`
[1] "2022-03-05"
Joining with `by = join_by(geo_value)`
[1] "2022-03-06"
Joining with `by = join_by(geo_value)`
[1] "2022-03-07"
Joining with `by = join_by(geo_value)`
[1] "2022-03-08"
Joining with `by = join_by(geo_value)`
[1] "2022-03-09"
Joining with `by = join_by(geo_value)`
[1] "2022-03-10"
Joining with `by = join_by(geo_value)`
[1] "2022-03-11"
Joining with `by = join_by(geo_value)`
[1] "2022-03-12"
Joining with `by = join_by(geo_value)`
[1] "2022-03-13"
Joining with `by = join_by(geo_value)`
[1] "2022-03-14"
Joining with `by = join_by(geo_value)`
[1] "2022-03-15"
Joining with `by = join_by(geo_value)`
[1] "2022-03-16"
Joining with `by = join_by(geo_value)`
[1] "2022-03-17"
Joining with `by = join_by(geo_value)`
[1] "2022-03-18"
Joining with `by = join_by(geo_value)`
[1] "2022-03-19"
Joining with `by = join_by(geo_value)`
[1] "2022-03-20"
Joining with `by = join_by(geo_value)`
[1] "2022-03-21"
Joining with `by = join_by(geo_value)`
[1] "2022-03-22"
Joining with `by = join_by(geo_value)`
[1] "2022-03-23"
Joining with `by = join_by(geo_value)`
[1] "2022-03-24"
Joining with `by = join_by(geo_value)`
[1] "2022-03-25"
Joining with `by = join_by(geo_value)`
[1] "2022-03-26"
Joining with `by = join_by(geo_value)`
[1] "2022-03-27"
Joining with `by = join_by(geo_value)`
[1] "2022-03-28"
Joining with `by = join_by(geo_value)`
[1] "2022-03-29"
Joining with `by = join_by(geo_value)`
[1] "2022-03-30"
Joining with `by = join_by(geo_value)`
[1] "2022-03-31"
Joining with `by = join_by(geo_value)`
[1] "2022-04-01"
Joining with `by = join_by(geo_value)`
[1] "2022-04-02"
Joining with `by = join_by(geo_value)`
[1] "2022-04-03"
Joining with `by = join_by(geo_value)`
[1] "2022-04-04"
Joining with `by = join_by(geo_value)`
[1] "2022-04-05"
Joining with `by = join_by(geo_value)`
[1] "2022-04-06"
Joining with `by = join_by(geo_value)`
[1] "2022-04-07"
Joining with `by = join_by(geo_value)`
[1] "2022-04-08"
Joining with `by = join_by(geo_value)`
[1] "2022-04-09"
Joining with `by = join_by(geo_value)`
[1] "2022-04-10"
Joining with `by = join_by(geo_value)`
[1] "2022-04-11"
Joining with `by = join_by(geo_value)`
[1] "2022-04-12"
Joining with `by = join_by(geo_value)`
[1] "2022-04-13"
Joining with `by = join_by(geo_value)`
[1] "2022-04-14"
Joining with `by = join_by(geo_value)`
[1] "2022-04-15"
Joining with `by = join_by(geo_value)`
[1] "2022-04-16"
Joining with `by = join_by(geo_value)`
[1] "2022-04-17"
Joining with `by = join_by(geo_value)`
[1] "2022-04-18"
Joining with `by = join_by(geo_value)`
[1] "2022-04-19"
Joining with `by = join_by(geo_value)`
[1] "2022-04-20"
Joining with `by = join_by(geo_value)`
[1] "2022-04-21"
Joining with `by = join_by(geo_value)`
[1] "2022-04-22"
Joining with `by = join_by(geo_value)`
[1] "2022-04-23"
Joining with `by = join_by(geo_value)`
[1] "2022-04-24"
Joining with `by = join_by(geo_value)`
[1] "2022-04-25"
Joining with `by = join_by(geo_value)`
[1] "2022-04-26"
Joining with `by = join_by(geo_value)`
[1] "2022-04-27"
Joining with `by = join_by(geo_value)`
[1] "2022-04-28"
Joining with `by = join_by(geo_value)`
[1] "2022-04-29"
Joining with `by = join_by(geo_value)`
[1] "2022-04-30"
Joining with `by = join_by(geo_value)`
[1] "2022-05-01"
Joining with `by = join_by(geo_value)`
[1] "2022-05-02"
Joining with `by = join_by(geo_value)`
[1] "2022-05-03"
Joining with `by = join_by(geo_value)`
[1] "2022-05-04"
Joining with `by = join_by(geo_value)`
[1] "2022-05-05"
Joining with `by = join_by(geo_value)`
[1] "2022-05-06"
Joining with `by = join_by(geo_value)`
[1] "2022-05-07"
Joining with `by = join_by(geo_value)`
[1] "2022-05-08"
Joining with `by = join_by(geo_value)`
[1] "2022-05-09"
Joining with `by = join_by(geo_value)`
[1] "2022-05-10"
Joining with `by = join_by(geo_value)`
[1] "2022-05-11"
Joining with `by = join_by(geo_value)`
[1] "2022-05-12"
Joining with `by = join_by(geo_value)`
[1] "2022-05-13"
Joining with `by = join_by(geo_value)`
[1] "2022-05-14"
Joining with `by = join_by(geo_value)`
[1] "2022-05-15"
Joining with `by = join_by(geo_value)`
[1] "2022-05-16"
Joining with `by = join_by(geo_value)`
[1] "2022-05-17"
Joining with `by = join_by(geo_value)`
[1] "2022-05-18"
Joining with `by = join_by(geo_value)`
[1] "2022-05-19"
Joining with `by = join_by(geo_value)`
[1] "2022-05-20"
Joining with `by = join_by(geo_value)`
[1] "2022-05-21"
Joining with `by = join_by(geo_value)`
[1] "2022-05-22"
Joining with `by = join_by(geo_value)`
[1] "2022-05-23"
Joining with `by = join_by(geo_value)`
[1] "2022-05-24"
Joining with `by = join_by(geo_value)`
[1] "2022-05-25"
Joining with `by = join_by(geo_value)`
[1] "2022-05-26"
Joining with `by = join_by(geo_value)`
[1] "2022-05-27"
Joining with `by = join_by(geo_value)`
[1] "2022-05-28"
Joining with `by = join_by(geo_value)`
[1] "2022-05-29"
Joining with `by = join_by(geo_value)`
[1] "2022-05-30"
Joining with `by = join_by(geo_value)`
[1] "2022-05-31"
Joining with `by = join_by(geo_value)`
[1] "2022-06-01"
Joining with `by = join_by(geo_value)`
[1] "2022-06-02"
Joining with `by = join_by(geo_value)`
[1] "2022-06-03"
Joining with `by = join_by(geo_value)`
[1] "2022-06-04"
Joining with `by = join_by(geo_value)`
[1] "2022-06-05"
Joining with `by = join_by(geo_value)`
[1] "2022-06-06"
Joining with `by = join_by(geo_value)`
[1] "2022-06-07"
Joining with `by = join_by(geo_value)`
[1] "2022-06-08"
Joining with `by = join_by(geo_value)`
[1] "2022-06-09"
Joining with `by = join_by(geo_value)`
[1] "2022-06-10"
Joining with `by = join_by(geo_value)`
[1] "2022-06-11"
Joining with `by = join_by(geo_value)`
[1] "2022-06-12"
Joining with `by = join_by(geo_value)`
[1] "2022-06-13"
Joining with `by = join_by(geo_value)`
[1] "2022-06-14"
Joining with `by = join_by(geo_value)`
[1] "2022-06-15"
Joining with `by = join_by(geo_value)`
[1] "2022-06-16"
Joining with `by = join_by(geo_value)`
[1] "2022-06-17"
Joining with `by = join_by(geo_value)`
[1] "2022-06-18"
Joining with `by = join_by(geo_value)`
[1] "2022-06-19"
Joining with `by = join_by(geo_value)`
[1] "2022-06-20"
Joining with `by = join_by(geo_value)`
[1] "2022-06-21"
Joining with `by = join_by(geo_value)`
[1] "2022-06-22"
Joining with `by = join_by(geo_value)`
[1] "2022-06-23"
Joining with `by = join_by(geo_value)`
[1] "2022-06-24"
Joining with `by = join_by(geo_value)`
[1] "2022-06-25"
Joining with `by = join_by(geo_value)`
[1] "2022-06-26"
Joining with `by = join_by(geo_value)`
[1] "2022-06-27"
Joining with `by = join_by(geo_value)`
[1] "2022-06-28"
Joining with `by = join_by(geo_value)`
[1] "2022-06-29"
Joining with `by = join_by(geo_value)`
[1] "2022-06-30"
Joining with `by = join_by(geo_value)`
[1] "2022-07-01"
Joining with `by = join_by(geo_value)`
[1] "2022-07-02"
Joining with `by = join_by(geo_value)`
[1] "2022-07-03"
Joining with `by = join_by(geo_value)`
[1] "2022-07-04"
Joining with `by = join_by(geo_value)`
[1] "2022-07-05"
Joining with `by = join_by(geo_value)`
[1] "2022-07-06"
Joining with `by = join_by(geo_value)`
[1] "2022-07-07"
Joining with `by = join_by(geo_value)`
[1] "2022-07-08"
Joining with `by = join_by(geo_value)`
[1] "2022-07-09"
Joining with `by = join_by(geo_value)`
[1] "2022-07-10"
Joining with `by = join_by(geo_value)`
[1] "2022-07-11"
Joining with `by = join_by(geo_value)`
[1] "2022-07-12"
Joining with `by = join_by(geo_value)`
[1] "2022-07-13"
Joining with `by = join_by(geo_value)`
[1] "2022-07-14"
Joining with `by = join_by(geo_value)`
[1] "2022-07-15"
Joining with `by = join_by(geo_value)`
[1] "2022-07-16"
Joining with `by = join_by(geo_value)`
[1] "2022-07-17"
Joining with `by = join_by(geo_value)`
[1] "2022-07-18"
Joining with `by = join_by(geo_value)`
[1] "2022-07-19"
Joining with `by = join_by(geo_value)`
[1] "2022-07-20"
Joining with `by = join_by(geo_value)`
[1] "2022-07-21"
Joining with `by = join_by(geo_value)`
[1] "2022-07-22"
Joining with `by = join_by(geo_value)`
[1] "2022-07-23"
Joining with `by = join_by(geo_value)`
[1] "2022-07-24"
Joining with `by = join_by(geo_value)`
[1] "2022-07-25"
Joining with `by = join_by(geo_value)`
[1] "2022-07-26"
Joining with `by = join_by(geo_value)`
[1] "2022-07-27"
Joining with `by = join_by(geo_value)`
[1] "2022-07-28"
Joining with `by = join_by(geo_value)`
[1] "2022-07-29"
Joining with `by = join_by(geo_value)`
[1] "2022-07-30"
Joining with `by = join_by(geo_value)`
[1] "2022-07-31"
Joining with `by = join_by(geo_value)`
[1] "2022-08-01"
Joining with `by = join_by(geo_value)`
[1] "2022-08-02"
Joining with `by = join_by(geo_value)`
[1] "2022-08-03"
Joining with `by = join_by(geo_value)`
[1] "2022-08-04"
Joining with `by = join_by(geo_value)`
[1] "2022-08-05"
Joining with `by = join_by(geo_value)`
[1] "2022-08-06"
Joining with `by = join_by(geo_value)`
[1] "2022-08-07"
Joining with `by = join_by(geo_value)`
[1] "2022-08-08"
Joining with `by = join_by(geo_value)`
[1] "2022-08-09"
Joining with `by = join_by(geo_value)`
[1] "2022-08-10"
Joining with `by = join_by(geo_value)`
[1] "2022-08-11"
Joining with `by = join_by(geo_value)`
[1] "2022-08-12"
Joining with `by = join_by(geo_value)`
[1] "2022-08-13"
Joining with `by = join_by(geo_value)`
[1] "2022-08-14"
Joining with `by = join_by(geo_value)`
[1] "2022-08-15"
Joining with `by = join_by(geo_value)`
[1] "2022-08-16"
Joining with `by = join_by(geo_value)`
[1] "2022-08-17"
Joining with `by = join_by(geo_value)`
[1] "2022-08-18"
Joining with `by = join_by(geo_value)`
[1] "2022-08-19"
Joining with `by = join_by(geo_value)`
[1] "2022-08-20"
Joining with `by = join_by(geo_value)`
[1] "2022-08-21"
Joining with `by = join_by(geo_value)`
[1] "2022-08-22"
Joining with `by = join_by(geo_value)`
[1] "2022-08-23"
Joining with `by = join_by(geo_value)`
[1] "2022-08-24"
Joining with `by = join_by(geo_value)`
[1] "2022-08-25"
Joining with `by = join_by(geo_value)`
[1] "2022-08-26"
Joining with `by = join_by(geo_value)`
[1] "2022-08-27"
Joining with `by = join_by(geo_value)`
[1] "2022-08-28"
Joining with `by = join_by(geo_value)`
[1] "2022-08-29"
Joining with `by = join_by(geo_value)`
[1] "2022-08-30"
Joining with `by = join_by(geo_value)`
[1] "2022-08-31"
Joining with `by = join_by(geo_value)`
[1] "2022-09-01"
Joining with `by = join_by(geo_value)`
[1] "2022-09-02"
Joining with `by = join_by(geo_value)`
[1] "2022-09-03"
Joining with `by = join_by(geo_value)`
[1] "2022-09-04"
Joining with `by = join_by(geo_value)`
[1] "2022-09-05"
Joining with `by = join_by(geo_value)`
[1] "2022-09-06"
Joining with `by = join_by(geo_value)`
[1] "2022-09-07"
Joining with `by = join_by(geo_value)`
[1] "2022-09-08"
Joining with `by = join_by(geo_value)`
[1] "2022-09-09"
Joining with `by = join_by(geo_value)`
[1] "2022-09-10"
Joining with `by = join_by(geo_value)`
[1] "2022-09-11"
Joining with `by = join_by(geo_value)`
[1] "2022-09-12"
Joining with `by = join_by(geo_value)`
[1] "2022-09-13"
Joining with `by = join_by(geo_value)`
[1] "2022-09-14"
Joining with `by = join_by(geo_value)`
[1] "2022-09-15"
Joining with `by = join_by(geo_value)`
[1] "2022-09-16"
Joining with `by = join_by(geo_value)`
[1] "2022-09-17"
Joining with `by = join_by(geo_value)`
[1] "2022-09-18"
Joining with `by = join_by(geo_value)`
[1] "2022-09-19"
Joining with `by = join_by(geo_value)`
[1] "2022-09-20"
Joining with `by = join_by(geo_value)`
[1] "2022-09-21"
Joining with `by = join_by(geo_value)`
[1] "2022-09-22"
Joining with `by = join_by(geo_value)`
[1] "2022-09-23"
Joining with `by = join_by(geo_value)`
[1] "2022-09-24"
Joining with `by = join_by(geo_value)`
[1] "2022-09-25"
Joining with `by = join_by(geo_value)`
[1] "2022-09-26"
Joining with `by = join_by(geo_value)`
[1] "2022-09-27"
Joining with `by = join_by(geo_value)`
[1] "2022-09-28"
Joining with `by = join_by(geo_value)`
[1] "2022-09-29"
Joining with `by = join_by(geo_value)`
[1] "2022-09-30"
Joining with `by = join_by(geo_value)`
[1] "2022-10-01"
Joining with `by = join_by(geo_value)`
[1] "2022-10-02"
Joining with `by = join_by(geo_value)`
[1] "2022-10-03"
Joining with `by = join_by(geo_value)`
[1] "2022-10-04"
Joining with `by = join_by(geo_value)`
[1] "2022-10-05"
Joining with `by = join_by(geo_value)`
[1] "2022-10-06"
Joining with `by = join_by(geo_value)`
[1] "2022-10-07"
Joining with `by = join_by(geo_value)`
[1] "2022-10-08"
Joining with `by = join_by(geo_value)`
[1] "2022-10-09"
Joining with `by = join_by(geo_value)`
[1] "2022-10-10"
Joining with `by = join_by(geo_value)`
[1] "2022-10-11"
Joining with `by = join_by(geo_value)`
[1] "2022-10-12"
Joining with `by = join_by(geo_value)`
[1] "2022-10-13"
Joining with `by = join_by(geo_value)`
[1] "2022-10-14"
Joining with `by = join_by(geo_value)`
[1] "2022-10-15"
Joining with `by = join_by(geo_value)`
[1] "2022-10-16"
Joining with `by = join_by(geo_value)`
[1] "2022-10-17"
Joining with `by = join_by(geo_value)`
[1] "2022-10-18"
Joining with `by = join_by(geo_value)`
[1] "2022-10-19"
Joining with `by = join_by(geo_value)`
[1] "2022-10-20"
Joining with `by = join_by(geo_value)`
[1] "2022-10-21"
Joining with `by = join_by(geo_value)`
[1] "2022-10-22"
Joining with `by = join_by(geo_value)`
[1] "2022-10-23"
Joining with `by = join_by(geo_value)`
[1] "2022-10-24"
Joining with `by = join_by(geo_value)`
[1] "2022-10-25"
Joining with `by = join_by(geo_value)`
[1] "2022-10-26"
Joining with `by = join_by(geo_value)`
[1] "2022-10-27"
Joining with `by = join_by(geo_value)`
[1] "2022-10-28"
Joining with `by = join_by(geo_value)`
[1] "2022-10-29"
Joining with `by = join_by(geo_value)`
[1] "2022-10-30"
Joining with `by = join_by(geo_value)`
[1] "2022-10-31"
Joining with `by = join_by(geo_value)`
[1] "2022-11-01"
Joining with `by = join_by(geo_value)`
[1] "2022-11-02"
Joining with `by = join_by(geo_value)`
[1] "2022-11-03"
Joining with `by = join_by(geo_value)`
[1] "2022-11-04"
Joining with `by = join_by(geo_value)`
[1] "2022-11-05"
Joining with `by = join_by(geo_value)`
[1] "2022-11-06"
Joining with `by = join_by(geo_value)`
[1] "2022-11-07"
Joining with `by = join_by(geo_value)`
[1] "2022-11-08"
Joining with `by = join_by(geo_value)`
[1] "2022-11-09"
Joining with `by = join_by(geo_value)`
[1] "2022-11-10"
Joining with `by = join_by(geo_value)`
[1] "2022-11-11"
Joining with `by = join_by(geo_value)`
[1] "2022-11-12"
Joining with `by = join_by(geo_value)`
[1] "2022-11-13"
Joining with `by = join_by(geo_value)`
[1] "2022-11-14"
Joining with `by = join_by(geo_value)`
[1] "2022-11-15"
Joining with `by = join_by(geo_value)`
[1] "2022-11-16"
Joining with `by = join_by(geo_value)`
[1] "2022-11-17"
Joining with `by = join_by(geo_value)`
[1] "2022-11-18"
Joining with `by = join_by(geo_value)`
[1] "2022-11-19"
Joining with `by = join_by(geo_value)`
[1] "2022-11-20"
Joining with `by = join_by(geo_value)`
[1] "2022-11-21"
Joining with `by = join_by(geo_value)`
[1] "2022-11-22"
Joining with `by = join_by(geo_value)`
[1] "2022-11-23"
Joining with `by = join_by(geo_value)`
[1] "2022-11-24"
Joining with `by = join_by(geo_value)`
[1] "2022-11-25"
Joining with `by = join_by(geo_value)`
[1] "2022-11-26"
Joining with `by = join_by(geo_value)`
[1] "2022-11-27"
Joining with `by = join_by(geo_value)`
[1] "2022-11-28"
Joining with `by = join_by(geo_value)`
[1] "2022-11-29"
Joining with `by = join_by(geo_value)`
[1] "2022-11-30"
Joining with `by = join_by(geo_value)`
[1] "2022-12-01"
Joining with `by = join_by(geo_value)`
[1] "2022-12-02"
Joining with `by = join_by(geo_value)`
[1] "2022-12-03"
Joining with `by = join_by(geo_value)`
[1] "2022-12-04"
Joining with `by = join_by(geo_value)`
[1] "2022-12-05"
Joining with `by = join_by(geo_value)`
[1] "2022-12-06"
Joining with `by = join_by(geo_value)`
[1] "2022-12-07"
Joining with `by = join_by(geo_value)`
[1] "2022-12-08"
Joining with `by = join_by(geo_value)`
[1] "2022-12-09"
Joining with `by = join_by(geo_value)`
[1] "2022-12-10"
Joining with `by = join_by(geo_value)`
[1] "2022-12-11"
Joining with `by = join_by(geo_value)`
[1] "2022-12-12"
Joining with `by = join_by(geo_value)`
[1] "2022-12-13"
Joining with `by = join_by(geo_value)`
[1] "2022-12-14"
Joining with `by = join_by(geo_value)`
[1] "2022-12-15"
Joining with `by = join_by(geo_value)`
[1] "2022-12-16"
Joining with `by = join_by(geo_value)`
[1] "2022-12-17"
Joining with `by = join_by(geo_value)`
[1] "2022-12-18"
Joining with `by = join_by(geo_value)`
[1] "2022-12-19"
Joining with `by = join_by(geo_value)`
[1] "2022-12-20"
Joining with `by = join_by(geo_value)`
[1] "2022-12-21"
Joining with `by = join_by(geo_value)`
[1] "2022-12-22"
Joining with `by = join_by(geo_value)`
[1] "2022-12-23"
Joining with `by = join_by(geo_value)`
[1] "2022-12-24"
Joining with `by = join_by(geo_value)`
[1] "2022-12-25"
Joining with `by = join_by(geo_value)`
[1] "2022-12-26"
Joining with `by = join_by(geo_value)`
[1] "2022-12-27"
Joining with `by = join_by(geo_value)`
[1] "2022-12-28"
Joining with `by = join_by(geo_value)`
[1] "2022-12-29"
Joining with `by = join_by(geo_value)`
[1] "2022-12-30"
Joining with `by = join_by(geo_value)`
[1] "2022-12-31"
Joining with `by = join_by(geo_value)`
[1] "2023-01-01"
Joining with `by = join_by(geo_value)`
[1] "2023-01-02"
Joining with `by = join_by(geo_value)`
[1] "2023-01-03"
Joining with `by = join_by(geo_value)`
[1] "2023-01-04"
Joining with `by = join_by(geo_value)`
[1] "2023-01-05"
Joining with `by = join_by(geo_value)`
[1] "2023-01-06"
Joining with `by = join_by(geo_value)`
[1] "2023-01-07"
Joining with `by = join_by(geo_value)`
[1] "2023-01-08"
Joining with `by = join_by(geo_value)`
[1] "2023-01-09"
Joining with `by = join_by(geo_value)`
[1] "2023-01-10"
Joining with `by = join_by(geo_value)`
[1] "2023-01-11"
Joining with `by = join_by(geo_value)`
[1] "2023-01-12"
Joining with `by = join_by(geo_value)`
[1] "2023-01-13"
Joining with `by = join_by(geo_value)`
[1] "2023-01-14"
Joining with `by = join_by(geo_value)`
[1] "2023-01-15"
Joining with `by = join_by(geo_value)`
[1] "2023-01-16"
Joining with `by = join_by(geo_value)`
[1] "2023-01-17"
Joining with `by = join_by(geo_value)`
[1] "2023-01-18"
Joining with `by = join_by(geo_value)`
[1] "2023-01-19"
Joining with `by = join_by(geo_value)`
[1] "2023-01-20"
Joining with `by = join_by(geo_value)`
[1] "2023-01-21"
Joining with `by = join_by(geo_value)`
[1] "2023-01-22"
Joining with `by = join_by(geo_value)`
[1] "2023-01-23"
Joining with `by = join_by(geo_value)`
[1] "2023-01-24"
Joining with `by = join_by(geo_value)`
[1] "2023-01-25"
Joining with `by = join_by(geo_value)`
[1] "2023-01-26"
Joining with `by = join_by(geo_value)`
[1] "2023-01-27"
Joining with `by = join_by(geo_value)`
[1] "2023-01-28"
Joining with `by = join_by(geo_value)`
[1] "2023-01-29"
Joining with `by = join_by(geo_value)`
[1] "2023-01-30"
Joining with `by = join_by(geo_value)`
[1] "2023-01-31"
Joining with `by = join_by(geo_value)`
[1] "2023-02-01"
Joining with `by = join_by(geo_value)`
[1] "2023-02-02"
Joining with `by = join_by(geo_value)`
[1] "2023-02-03"
Joining with `by = join_by(geo_value)`
[1] "2023-02-04"
Joining with `by = join_by(geo_value)`
[1] "2023-02-05"
Joining with `by = join_by(geo_value)`
[1] "2023-02-06"
Joining with `by = join_by(geo_value)`
[1] "2023-02-07"
Joining with `by = join_by(geo_value)`
[1] "2023-02-08"
Joining with `by = join_by(geo_value)`
[1] "2023-02-09"
Joining with `by = join_by(geo_value)`
[1] "2023-02-10"
Joining with `by = join_by(geo_value)`
[1] "2023-02-11"
Joining with `by = join_by(geo_value)`
[1] "2023-02-12"
Joining with `by = join_by(geo_value)`
[1] "2023-02-13"
Joining with `by = join_by(geo_value)`
[1] "2023-02-14"
Joining with `by = join_by(geo_value)`
[1] "2023-02-15"
Joining with `by = join_by(geo_value)`
[1] "2023-02-16"
Joining with `by = join_by(geo_value)`
[1] "2023-02-17"
Joining with `by = join_by(geo_value)`
[1] "2023-02-18"
Joining with `by = join_by(geo_value)`
[1] "2023-02-19"
Joining with `by = join_by(geo_value)`
[1] "2023-02-20"
Joining with `by = join_by(geo_value)`
[1] "2023-02-21"
Joining with `by = join_by(geo_value)`
[1] "2023-02-22"
Joining with `by = join_by(geo_value)`
[1] "2023-02-23"
Joining with `by = join_by(geo_value)`
[1] "2023-02-24"
Joining with `by = join_by(geo_value)`
[1] "2023-02-25"
Joining with `by = join_by(geo_value)`
[1] "2023-02-26"
Joining with `by = join_by(geo_value)`
[1] "2023-02-27"
Joining with `by = join_by(geo_value)`
[1] "2023-02-28"
Joining with `by = join_by(geo_value)`
[1] "2023-03-01"
Joining with `by = join_by(geo_value)`
[1] "2023-03-02"
Joining with `by = join_by(geo_value)`
[1] "2023-03-03"
Joining with `by = join_by(geo_value)`
[1] "2023-03-04"
Joining with `by = join_by(geo_value)`
[1] "2023-03-05"
Joining with `by = join_by(geo_value)`
[1] "2023-03-06"
Joining with `by = join_by(geo_value)`
[1] "2023-03-07"
Joining with `by = join_by(geo_value)`
[1] "2023-03-08"
Joining with `by = join_by(geo_value)`
[1] "2023-03-09"
Joining with `by = join_by(geo_value)`
[1] "2023-03-10"
Joining with `by = join_by(geo_value)`
[1] "2023-03-11"
Joining with `by = join_by(geo_value)`
[1] "2023-03-12"
Joining with `by = join_by(geo_value)`
[1] "2023-03-13"
Joining with `by = join_by(geo_value)`
[1] "2023-03-14"
Joining with `by = join_by(geo_value)`
[1] "2023-03-15"
Joining with `by = join_by(geo_value)`
[1] "2023-03-16"
Joining with `by = join_by(geo_value)`
[1] "2023-03-17"
Joining with `by = join_by(geo_value)`
[1] "2023-03-18"
Joining with `by = join_by(geo_value)`
[1] "2023-03-19"
Joining with `by = join_by(geo_value)`
[1] "2023-03-20"
Joining with `by = join_by(geo_value)`
[1] "2023-03-21"
Joining with `by = join_by(geo_value)`
[1] "2023-03-22"
Joining with `by = join_by(geo_value)`
[1] "2023-03-23"
Joining with `by = join_by(geo_value)`
[1] "2023-03-24"
Joining with `by = join_by(geo_value)`
[1] "2023-03-25"
Joining with `by = join_by(geo_value)`
[1] "2023-03-26"
Joining with `by = join_by(geo_value)`
[1] "2023-03-27"
Joining with `by = join_by(geo_value)`
[1] "2023-03-28"
Joining with `by = join_by(geo_value)`
[1] "2023-03-29"
Joining with `by = join_by(geo_value)`
[1] "2023-03-30"
Joining with `by = join_by(geo_value)`
[1] "2023-03-31"
Joining with `by = join_by(geo_value)`
[1] "2023-04-01"
Joining with `by = join_by(geo_value)`
[1] "2023-04-02"
Joining with `by = join_by(geo_value)`
[1] "2023-04-03"
Joining with `by = join_by(geo_value)`
[1] "2023-04-04"
Joining with `by = join_by(geo_value)`
[1] "2023-04-05"
Joining with `by = join_by(geo_value)`
[1] "2023-04-06"
Joining with `by = join_by(geo_value)`
[1] "2023-04-07"
Joining with `by = join_by(geo_value)`
[1] "2023-04-08"
Joining with `by = join_by(geo_value)`
[1] "2023-04-09"
Joining with `by = join_by(geo_value)`
[1] "2023-04-10"
Joining with `by = join_by(geo_value)`
[1] "2023-04-11"
Joining with `by = join_by(geo_value)`
[1] "2023-04-12"
Joining with `by = join_by(geo_value)`
[1] "2023-04-13"
Joining with `by = join_by(geo_value)`
[1] "2023-04-14"
Joining with `by = join_by(geo_value)`
[1] "2023-04-15"
Joining with `by = join_by(geo_value)`
[1] "2023-04-16"
Joining with `by = join_by(geo_value)`
[1] "2023-04-17"
Joining with `by = join_by(geo_value)`
[1] "2023-04-18"
Joining with `by = join_by(geo_value)`
[1] "2023-04-19"
Joining with `by = join_by(geo_value)`
[1] "2023-04-20"
Joining with `by = join_by(geo_value)`
[1] "2023-04-21"
Joining with `by = join_by(geo_value)`
[1] "2023-04-22"
Joining with `by = join_by(geo_value)`
[1] "2023-04-23"
Joining with `by = join_by(geo_value)`
[1] "2023-04-24"
Joining with `by = join_by(geo_value)`
[1] "2023-04-25"
Joining with `by = join_by(geo_value)`
[1] "2023-04-26"
Joining with `by = join_by(geo_value)`
[1] "2023-04-27"
Joining with `by = join_by(geo_value)`
[1] "2023-04-28"
Joining with `by = join_by(geo_value)`
[1] "2023-04-29"
Joining with `by = join_by(geo_value)`
[1] "2023-04-30"
Joining with `by = join_by(geo_value)`
[1] "2023-05-01"
Joining with `by = join_by(geo_value)`
[1] "2023-05-02"
Joining with `by = join_by(geo_value)`
[1] "2023-05-03"
Joining with `by = join_by(geo_value)`
[1] "2023-05-04"
Joining with `by = join_by(geo_value)`
[1] "2023-05-05"
Joining with `by = join_by(geo_value)`
[1] "2023-05-06"
Joining with `by = join_by(geo_value)`
[1] "2023-05-07"
Joining with `by = join_by(geo_value)`
[1] "2023-05-08"
Joining with `by = join_by(geo_value)`
[1] "2023-05-09"
Joining with `by = join_by(geo_value)`
[1] "2023-05-10"
Joining with `by = join_by(geo_value)`
[1] "2023-05-11"
Joining with `by = join_by(geo_value)`
[1] "2023-05-12"
Joining with `by = join_by(geo_value)`
[1] "2023-05-13"
Joining with `by = join_by(geo_value)`
[1] "2023-05-14"
Joining with `by = join_by(geo_value)`
[1] "2023-05-15"
Joining with `by = join_by(geo_value)`
[1] "2023-05-16"
Joining with `by = join_by(geo_value)`
[1] "2023-05-17"
Joining with `by = join_by(geo_value)`
[1] "2023-05-18"
Joining with `by = join_by(geo_value)`
[1] "2023-05-19"
Joining with `by = join_by(geo_value)`
[1] "2023-05-20"
Joining with `by = join_by(geo_value)`
[1] "2023-05-21"
Joining with `by = join_by(geo_value)`
[1] "2023-05-22"
Joining with `by = join_by(geo_value)`
[1] "2023-05-23"
Joining with `by = join_by(geo_value)`
[1] "2023-05-24"
Joining with `by = join_by(geo_value)`
[1] "2023-05-25"
Joining with `by = join_by(geo_value)`
[1] "2023-05-26"
Joining with `by = join_by(geo_value)`
[1] "2023-05-27"
Joining with `by = join_by(geo_value)`
[1] "2023-05-28"
Joining with `by = join_by(geo_value)`
[1] "2023-05-29"
Joining with `by = join_by(geo_value)`
[1] "2023-05-30"
[1] "2023-05-31"
Joining with `by = join_by(geo_value)`
[1] "2023-06-01"
Joining with `by = join_by(geo_value)`
[1] "2023-06-02"
Joining with `by = join_by(geo_value)`
[1] "2023-06-03"
Joining with `by = join_by(geo_value)`
[1] "2023-06-04"
Joining with `by = join_by(geo_value)`
[1] "2023-06-05"
Joining with `by = join_by(geo_value)`
[1] "2023-06-06"
Joining with `by = join_by(geo_value)`
[1] "2023-06-07"
Joining with `by = join_by(geo_value)`
[1] "2023-06-08"
Joining with `by = join_by(geo_value)`
[1] "2023-06-09"
Joining with `by = join_by(geo_value)`
[1] "2023-06-10"
Joining with `by = join_by(geo_value)`
[1] "2023-06-11"
Joining with `by = join_by(geo_value)`
[1] "2023-06-12"
Joining with `by = join_by(geo_value)`
[1] "2023-06-13"
Joining with `by = join_by(geo_value)`
[1] "2023-06-14"
Joining with `by = join_by(geo_value)`
[1] "2023-06-15"
Joining with `by = join_by(geo_value)`
[1] "2023-06-16"
Joining with `by = join_by(geo_value)`
[1] "2023-06-17"
Joining with `by = join_by(geo_value)`
[1] "2023-06-18"
Joining with `by = join_by(geo_value)`
[1] "2023-06-19"
Joining with `by = join_by(geo_value)`
[1] "2023-06-20"
Joining with `by = join_by(geo_value)`
[1] "2023-06-21"
Joining with `by = join_by(geo_value)`
[1] "2023-06-22"
Joining with `by = join_by(geo_value)`
[1] "2023-06-23"
Joining with `by = join_by(geo_value)`
[1] "2023-06-24"
Joining with `by = join_by(geo_value)`
[1] "2023-06-25"
Joining with `by = join_by(geo_value)`
[1] "2023-06-26"
Joining with `by = join_by(geo_value)`
[1] "2023-06-27"
Joining with `by = join_by(geo_value)`
[1] "2023-06-28"
Joining with `by = join_by(geo_value)`
[1] "2023-06-29"
Joining with `by = join_by(geo_value)`
[1] "2023-06-30"
Joining with `by = join_by(geo_value)`
[1] "2023-07-01"
Joining with `by = join_by(geo_value)`
[1] "2023-07-02"
Joining with `by = join_by(geo_value)`
[1] "2023-07-03"
Joining with `by = join_by(geo_value)`
[1] "2023-07-04"
Joining with `by = join_by(geo_value)`
[1] "2023-07-05"
Joining with `by = join_by(geo_value)`
[1] "2023-07-06"
Joining with `by = join_by(geo_value)`
[1] "2023-07-07"
Joining with `by = join_by(geo_value)`
[1] "2023-07-08"
Joining with `by = join_by(geo_value)`
[1] "2023-07-09"
Joining with `by = join_by(geo_value)`
[1] "2023-07-10"
Joining with `by = join_by(geo_value)`
[1] "2023-07-11"
Joining with `by = join_by(geo_value)`
[1] "2023-07-12"
Joining with `by = join_by(geo_value)`
[1] "2023-07-13"
Joining with `by = join_by(geo_value)`
[1] "2023-07-14"
Joining with `by = join_by(geo_value)`
[1] "2023-07-15"
Joining with `by = join_by(geo_value)`
[1] "2023-07-16"
Joining with `by = join_by(geo_value)`
[1] "2023-07-17"
Joining with `by = join_by(geo_value)`
[1] "2023-07-18"
Joining with `by = join_by(geo_value)`
[1] "2023-07-19"
Joining with `by = join_by(geo_value)`
[1] "2023-07-20"
Joining with `by = join_by(geo_value)`
[1] "2023-07-21"
Joining with `by = join_by(geo_value)`
[1] "2023-07-22"
Joining with `by = join_by(geo_value)`
[1] "2023-07-23"
Joining with `by = join_by(geo_value)`
[1] "2023-07-24"
Joining with `by = join_by(geo_value)`
[1] "2023-07-25"
Joining with `by = join_by(geo_value)`
[1] "2023-07-26"
Joining with `by = join_by(geo_value)`
[1] "2023-07-27"
Joining with `by = join_by(geo_value)`
[1] "2023-07-28"
Joining with `by = join_by(geo_value)`
[1] "2023-07-29"
Joining with `by = join_by(geo_value)`
[1] "2023-07-30"
Joining with `by = join_by(geo_value)`
[1] "2023-07-31"
Joining with `by = join_by(geo_value)`
[1] "2023-08-01"
Joining with `by = join_by(geo_value)`
Warning messages:
1: There was 1 warning in `filter()`.
ℹ In argument: `time_value == max(time_value)`.
Caused by warning in `max.default()`:
! no non-missing arguments to max; returning -Inf 
2: There was 1 warning in `filter()`.
ℹ In argument: `time_value == max(time_value)`.
Caused by warning in `max.default()`:
! no non-missing arguments to max; returning -Inf 
3: There was 1 warning in `filter()`.
ℹ In argument: `time_value == max(time_value)`.
Caused by warning in `max.default()`:
! no non-missing arguments to max; returning -Inf 
4: There was 1 warning in `filter()`.
ℹ In argument: `time_value == max(time_value)`.
Caused by warning in `max.default()`:
! no non-missing arguments to max; returning -Inf 
5: There was 1 warning in `filter()`.
ℹ In argument: `time_value == max(time_value)`.
Caused by warning in `max.default()`:
! no non-missing arguments to max; returning -Inf 
6: There was 1 warning in `filter()`.
ℹ In argument: `time_value == max(time_value)`.
Caused by warning in `max.default()`:
! no non-missing arguments to max; returning -Inf 
> 
> 
> write.csv(back_2, "../../predictions/aba_noup_twomonth.csv", row.names = FALSE)
> 
> 
> 
> 
> 
> 
> proc.time()
     user    system   elapsed 
309471.00  20181.47 330632.58 
