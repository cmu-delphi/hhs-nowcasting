
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## ------------------------------------------------------------------------------------------------------------------------------------------
> source("assets_noupdate/data_load.R")

Attaching package: ‘epiprocess’

The following object is masked from ‘package:stats’:

    filter


Attaching package: ‘lubridate’

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union


Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Rows: 51489618 Columns: 9
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): geo_value
dbl  (6): lag, value_covid, value_total, sum_covid, sum_total, weekly_in_ratio
date (2): issue_date, time_value

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Rows: 36857165 Columns: 10
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): geo_value
dbl  (6): lag, value_covid, value_total, sum_covid, sum_total, weekly_out_ratio
date (3): issue_date, time_value, end

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Rows: 55578 Columns: 4
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): geo_value
dbl  (1): GT
date (2): time_value, issue_date

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Rows: 20980 Columns: 3
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): geo_value
dbl  (1): GT
date (1): time_value

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> source("assets_noupdate/unconstrained_state_level_big_lag.R")
> source("assets_noupdate/unconstrained_national_level_bl.R")
> 
> 
> ## ------------------------------------------------------------------------------------------------------------------------------------------
> "
+ One shot for omicron and after, only retrain 30 days after start
+ As we consider every signal entry issued after that to be fixed
+ No recieving labels on or after 2021-12-01
+ "
[1] "\nOne shot for omicron and after, only retrain 30 days after start\nAs we consider every signal entry issued after that to be fixed\nNo recieving labels on or after 2021-12-01\n"
> 
> omi_start = as.Date("2021-11-30")
> end_date = as.Date("2023-08-01")
> gammas = signif(seq(0, 0.07, length.out = 25), 3)
> gammas = gammas[gammas <= 0.0625]
> alphas = signif(seq(0, 1, length.out = 51))
> 
> cadence = 30
> offset = 120
> vl = 2
> 
> state_model_coef = c()
> national_model_coef = c()
> 
> back_2 = c()
> val_frame = c()
> val_gamma = c()
> 
> # Still need to iterate through all dates, with the exception of no retraining after
> # 30 days of beginning of start of omicron
> # NOTE: Still need to produce backcasts
> 
> for (d in seq(omi_start + 1, end_date, by = 1)) {
+   
+   # If less than 30 days after start, still retrain
+ 
+   if (d <= omi_start + 30) {
+     
+     # Train end is always the same in oneshot setting
+     train_end = omi_start - vl * cadence
+     test_start = omi_start + 1
+     
+     version = as.Date(d, "1970-01-01")
+     
+     # state level val frame 
+     state_val_frame = state_produce_fv(gammas, train_end, version)
+     
+     # National level val frame 
+     national_val_frame = national_produce_fv(gammas, train_end, version)
+     
+     if (nrow(state_val_frame) == 0) {
+       
+       break
+       
+     }
+     
+     # Make sure test predictions are out of sample
+     stopifnot(state_val_frame$time_value <= as.Date(test_start, "1970-01-01"))
+     
+     
+     # Select FV gamma and retrain
+     # Two levels: state and national level
+     # No more subsetting: `produce_fv` only produces 2 months of FV data
+     state_val_gamma = state_val_frame %>%
+       group_by(geo_value, gamma) %>%
+       summarise(MAE = mean(abs(.resid))) %>%
+       mutate(Min = min(MAE)) %>%
+       filter(MAE == Min) %>%
+       select(geo_value, gamma)
+     
+     
+     national_gamma = national_val_frame %>%
+       group_by(gamma) %>%
+       summarise(MAE = mean(abs(.resid))) %>%
+       mutate(Min = min(MAE)) %>%
+       filter(MAE == Min) %>%
+       select(gamma)
+     
+     # Refit, this time using all the data, with `omi_start` as cutoff
+     # Becuase no future labels are made available to us
+     # State level
+     state_train = state_get_train_ar(omi_start, version) %>%
+       group_by(geo_value) %>%
+       merge(state_val_gamma, by = "geo_value")
+     
+     national_train = national_get_train_ar(omi_start, version) %>%
+       ungroup() %>%
+       mutate(ng = national_gamma$gamma)
+     
+     
+     # We have changed our model to be autoregressive
+     state_selected_models = state_train %>%
+       group_by(geo_value) %>%
+       do(model = lm(GT ~ in_6 + in_13 + in_20 + out_6 + out_13 + out_20, 
+                     weights = exp(-gamma * backcast_lag) / max(exp(-gamma * backcast_lag)),
+                     data = .))
+     
+     national_selected_models = lm(GT ~ in_6 + in_13 + in_20 + out_6 + out_13 + out_20, 
+                     weights = exp(-ng * backcast_lag) / max(exp(-ng * backcast_lag)),
+                     data = national_train)
+     
+     
+         # After selection and retrain, store the models with `geo_value` and `issue_date`
+     # It is important to store the RETRAINED coefficents
+     state_selected_tmp = state_selected_models %>%
+       group_by(geo_value) %>%
+       group_modify(~ bind_rows(coef(.$model[[1]]))) %>%
+       mutate(issue_date = as.Date(version, "1970-01-01"))
+     
+     state_model_coef = rbind(state_model_coef, state_selected_tmp)
+     
+     # national_selected_tmp = national_selected_models %>%
+     #   summarise(~ bind_rows(coef(national_selected_models))) %>%
+     #   mutate(issue_date = as.Date(version, "1970-01-01"))
+     
+     national_model_coef = rbind(national_model_coef, c(national_selected_models$coefficients, 
+       as.Date(version, "1970-01-01")))
+     
+     
+     
+     # After selection and retrain, store the models with `geo_value` and `issue_date`
+     # It is important to store the RETRAINED coefficents
+     state_selected_tmp = state_selected_models %>%
+       group_by(geo_value) %>%
+       group_modify(~ bind_rows(coef(.$model[[1]]))) %>%
+       mutate(issue_date = as.Date(version, "1970-01-01"))
+     
+     
+     
+     # Find alphas now
+     mixed_val_frame = alpha_fv(alphas, state_val_frame, national_val_frame, state_val_gamma, national_gamma)
+     opt_alpha = mixed_val_frame %>%
+       group_by(geo_value, alpha) %>%
+       summarise(MAE = mean(.resid)) %>%
+       mutate(Min = min(MAE)) %>%
+       filter(MAE == Min) %>%
+       rename(optimal = alpha) %>%
+       select(geo_value, optimal)
+     
+     
+     
+     state_test = state_get_test_backnow_raw(test_start, version)
+     national_test = national_get_test_backnow_raw(test_start, version)
+     
+     # If not test points at all, next date in test time
+     if (nrow(state_test) == 0) {
+       next
+     }
+     
+     # Another round of making sure out of sample
+     stopifnot(max(state_val_frame$time_value) <= min(state_test$time_value))
+     stopifnot(max(state_train$time_value) <= min(state_test$time_value))
+     
+     # Use inner_join to avoid problems in null data
+     # So that you don't actually predict training samples...
+     state_test = state_test %>%
+       group_by(geo_value) %>%
+       nest() %>%
+       inner_join(state_selected_models) %>%
+       verify(nrow(.) != 0)
+     
+     national_test = national_test %>%
+       mutate(national_fit = predict(national_selected_models, newdata = .)) %>%
+       verify(nrow(.) != 0)
+     
+ 
+     state_Tested = state_test %>%
+       do(augment(.$model[[1]], newdata = .$data[[1]])) %>%
+       rename(state_fit = .fitted) %>%
+       select(geo_value, time_value, issue_date, state_fit, GT)
+     
+     national_Tested = national_test %>%
+       select(geo_value, time_value, issue_date, national_fit)
+     
+     Tested = state_Tested %>%
+       inner_join(national_Tested, by = c("geo_value", "time_value", "issue_date")) %>%
+       inner_join(opt_alpha, by = "geo_value") %>%
+       group_by(geo_value) %>%
+       mutate(mixed_pred = optimal * state_fit + (1 - optimal) * national_fit) %>%
+       mutate(staleness = as.numeric(time_value - omi_start))
+     
+     
+     back_2 = rbind(back_2, Tested)
+     
+   }
+   
+   else {
+     
+     version = as.Date(d, "1970-01-01")
+     
+     print(as.Date(d, "1970-01-01"))
+     
+     # 30 days later, everything is now considered to be finalized
+     # No more retraining now
+     state_test = state_get_test_oneshot_impute(version)
+     national_test = national_get_test_oneshot_impute(version)
+ 
+     
+     if(is.null(state_test)) {
+       
+       next
+       
+     }
+           
+     state_test = state_test %>%
+       group_by(geo_value) %>%
+       nest() %>%
+       inner_join(state_selected_models) %>%
+       verify(nrow(.) != 0)
+     
+     national_test = national_test %>%
+       mutate(national_fit = predict(national_selected_models, newdata = .)) %>%
+       verify(nrow(.) != 0)
+   
+   
+     state_Tested = state_test %>%
+       do(augment(.$model[[1]], newdata = .$data[[1]])) %>%
+       rename(state_fit = .fitted) %>%
+       select(geo_value, time_value, issue_date, state_fit, GT)
+     
+     national_Tested = national_test %>%
+       select(geo_value, time_value, issue_date, national_fit)
+     
+     Tested = state_Tested %>%
+       inner_join(national_Tested, by = c("geo_value", "time_value", "issue_date")) %>%
+       inner_join(opt_alpha, by = "geo_value") %>%
+       group_by(geo_value) %>%
+       mutate(mixed_pred = optimal * state_fit + (1 - optimal) * national_fit) %>%
+       mutate(staleness = as.numeric(time_value - omi_start))
+     
+     
+     back_2 = rbind(back_2, Tested)
+     
+   }
+   
+ }
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
Joining with `by = join_by(geo_value)`
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'geo_value'. You can override using the
`.groups` argument.
Joining with `by = join_by(geo_value)`
[1] "2021-12-31"
Joining with `by = join_by(geo_value)`
[1] "2022-01-01"
Joining with `by = join_by(geo_value)`
[1] "2022-01-02"
Joining with `by = join_by(geo_value)`
[1] "2022-01-03"
Joining with `by = join_by(geo_value)`
[1] "2022-01-04"
Joining with `by = join_by(geo_value)`
[1] "2022-01-05"
Joining with `by = join_by(geo_value)`
[1] "2022-01-06"
Joining with `by = join_by(geo_value)`
[1] "2022-01-07"
Joining with `by = join_by(geo_value)`
[1] "2022-01-08"
Joining with `by = join_by(geo_value)`
[1] "2022-01-09"
Joining with `by = join_by(geo_value)`
[1] "2022-01-10"
Joining with `by = join_by(geo_value)`
[1] "2022-01-11"
Joining with `by = join_by(geo_value)`
[1] "2022-01-12"
Joining with `by = join_by(geo_value)`
[1] "2022-01-13"
Joining with `by = join_by(geo_value)`
[1] "2022-01-14"
Joining with `by = join_by(geo_value)`
[1] "2022-01-15"
Joining with `by = join_by(geo_value)`
[1] "2022-01-16"
Joining with `by = join_by(geo_value)`
[1] "2022-01-17"
Joining with `by = join_by(geo_value)`
[1] "2022-01-18"
Joining with `by = join_by(geo_value)`
[1] "2022-01-19"
Joining with `by = join_by(geo_value)`
[1] "2022-01-20"
Joining with `by = join_by(geo_value)`
[1] "2022-01-21"
Joining with `by = join_by(geo_value)`
[1] "2022-01-22"
Joining with `by = join_by(geo_value)`
[1] "2022-01-23"
Joining with `by = join_by(geo_value)`
[1] "2022-01-24"
Joining with `by = join_by(geo_value)`
[1] "2022-01-25"
Joining with `by = join_by(geo_value)`
[1] "2022-01-26"
Joining with `by = join_by(geo_value)`
[1] "2022-01-27"
Joining with `by = join_by(geo_value)`
[1] "2022-01-28"
Joining with `by = join_by(geo_value)`
[1] "2022-01-29"
Joining with `by = join_by(geo_value)`
[1] "2022-01-30"
Joining with `by = join_by(geo_value)`
[1] "2022-01-31"
Joining with `by = join_by(geo_value)`
[1] "2022-02-01"
Joining with `by = join_by(geo_value)`
[1] "2022-02-02"
Joining with `by = join_by(geo_value)`
[1] "2022-02-03"
Joining with `by = join_by(geo_value)`
[1] "2022-02-04"
Joining with `by = join_by(geo_value)`
[1] "2022-02-05"
Joining with `by = join_by(geo_value)`
[1] "2022-02-06"
Joining with `by = join_by(geo_value)`
[1] "2022-02-07"
Joining with `by = join_by(geo_value)`
[1] "2022-02-08"
Joining with `by = join_by(geo_value)`
[1] "2022-02-09"
Joining with `by = join_by(geo_value)`
[1] "2022-02-10"
Joining with `by = join_by(geo_value)`
[1] "2022-02-11"
Joining with `by = join_by(geo_value)`
[1] "2022-02-12"
Joining with `by = join_by(geo_value)`
[1] "2022-02-13"
Joining with `by = join_by(geo_value)`
[1] "2022-02-14"
Joining with `by = join_by(geo_value)`
[1] "2022-02-15"
Joining with `by = join_by(geo_value)`
[1] "2022-02-16"
Joining with `by = join_by(geo_value)`
[1] "2022-02-17"
Joining with `by = join_by(geo_value)`
[1] "2022-02-18"
Joining with `by = join_by(geo_value)`
[1] "2022-02-19"
Joining with `by = join_by(geo_value)`
[1] "2022-02-20"
Joining with `by = join_by(geo_value)`
[1] "2022-02-21"
Joining with `by = join_by(geo_value)`
[1] "2022-02-22"
Joining with `by = join_by(geo_value)`
[1] "2022-02-23"
Joining with `by = join_by(geo_value)`
[1] "2022-02-24"
Joining with `by = join_by(geo_value)`
[1] "2022-02-25"
Joining with `by = join_by(geo_value)`
[1] "2022-02-26"
Joining with `by = join_by(geo_value)`
[1] "2022-02-27"
Joining with `by = join_by(geo_value)`
[1] "2022-02-28"
Joining with `by = join_by(geo_value)`
[1] "2022-03-01"
Joining with `by = join_by(geo_value)`
[1] "2022-03-02"
Joining with `by = join_by(geo_value)`
[1] "2022-03-03"
Joining with `by = join_by(geo_value)`
[1] "2022-03-04"
Joining with `by = join_by(geo_value)`
[1] "2022-03-05"
Joining with `by = join_by(geo_value)`
[1] "2022-03-06"
Joining with `by = join_by(geo_value)`
[1] "2022-03-07"
Joining with `by = join_by(geo_value)`
[1] "2022-03-08"
Joining with `by = join_by(geo_value)`
[1] "2022-03-09"
Joining with `by = join_by(geo_value)`
[1] "2022-03-10"
Joining with `by = join_by(geo_value)`
[1] "2022-03-11"
Joining with `by = join_by(geo_value)`
[1] "2022-03-12"
Joining with `by = join_by(geo_value)`
[1] "2022-03-13"
Joining with `by = join_by(geo_value)`
[1] "2022-03-14"
Joining with `by = join_by(geo_value)`
[1] "2022-03-15"
Joining with `by = join_by(geo_value)`
[1] "2022-03-16"
Joining with `by = join_by(geo_value)`
[1] "2022-03-17"
Joining with `by = join_by(geo_value)`
[1] "2022-03-18"
Joining with `by = join_by(geo_value)`
[1] "2022-03-19"
Joining with `by = join_by(geo_value)`
[1] "2022-03-20"
Joining with `by = join_by(geo_value)`
[1] "2022-03-21"
Joining with `by = join_by(geo_value)`
[1] "2022-03-22"
Joining with `by = join_by(geo_value)`
[1] "2022-03-23"
Joining with `by = join_by(geo_value)`
[1] "2022-03-24"
Joining with `by = join_by(geo_value)`
[1] "2022-03-25"
Joining with `by = join_by(geo_value)`
[1] "2022-03-26"
Joining with `by = join_by(geo_value)`
[1] "2022-03-27"
Joining with `by = join_by(geo_value)`
[1] "2022-03-28"
Joining with `by = join_by(geo_value)`
[1] "2022-03-29"
Joining with `by = join_by(geo_value)`
[1] "2022-03-30"
Joining with `by = join_by(geo_value)`
[1] "2022-03-31"
Joining with `by = join_by(geo_value)`
[1] "2022-04-01"
Joining with `by = join_by(geo_value)`
[1] "2022-04-02"
Joining with `by = join_by(geo_value)`
[1] "2022-04-03"
Joining with `by = join_by(geo_value)`
[1] "2022-04-04"
Joining with `by = join_by(geo_value)`
[1] "2022-04-05"
Joining with `by = join_by(geo_value)`
[1] "2022-04-06"
Joining with `by = join_by(geo_value)`
[1] "2022-04-07"
Joining with `by = join_by(geo_value)`
[1] "2022-04-08"
Joining with `by = join_by(geo_value)`
[1] "2022-04-09"
Joining with `by = join_by(geo_value)`
[1] "2022-04-10"
Joining with `by = join_by(geo_value)`
[1] "2022-04-11"
Joining with `by = join_by(geo_value)`
[1] "2022-04-12"
Joining with `by = join_by(geo_value)`
[1] "2022-04-13"
Joining with `by = join_by(geo_value)`
[1] "2022-04-14"
Joining with `by = join_by(geo_value)`
[1] "2022-04-15"
Joining with `by = join_by(geo_value)`
[1] "2022-04-16"
Joining with `by = join_by(geo_value)`
[1] "2022-04-17"
Joining with `by = join_by(geo_value)`
[1] "2022-04-18"
Joining with `by = join_by(geo_value)`
[1] "2022-04-19"
Joining with `by = join_by(geo_value)`
[1] "2022-04-20"
Joining with `by = join_by(geo_value)`
[1] "2022-04-21"
Joining with `by = join_by(geo_value)`
[1] "2022-04-22"
Joining with `by = join_by(geo_value)`
[1] "2022-04-23"
Joining with `by = join_by(geo_value)`
[1] "2022-04-24"
Joining with `by = join_by(geo_value)`
[1] "2022-04-25"
Joining with `by = join_by(geo_value)`
[1] "2022-04-26"
Joining with `by = join_by(geo_value)`
[1] "2022-04-27"
Joining with `by = join_by(geo_value)`
[1] "2022-04-28"
Joining with `by = join_by(geo_value)`
[1] "2022-04-29"
Joining with `by = join_by(geo_value)`
[1] "2022-04-30"
Joining with `by = join_by(geo_value)`
[1] "2022-05-01"
Joining with `by = join_by(geo_value)`
[1] "2022-05-02"
Joining with `by = join_by(geo_value)`
[1] "2022-05-03"
Joining with `by = join_by(geo_value)`
[1] "2022-05-04"
Joining with `by = join_by(geo_value)`
[1] "2022-05-05"
Joining with `by = join_by(geo_value)`
[1] "2022-05-06"
Joining with `by = join_by(geo_value)`
[1] "2022-05-07"
Joining with `by = join_by(geo_value)`
[1] "2022-05-08"
Joining with `by = join_by(geo_value)`
[1] "2022-05-09"
Joining with `by = join_by(geo_value)`
[1] "2022-05-10"
Joining with `by = join_by(geo_value)`
[1] "2022-05-11"
Joining with `by = join_by(geo_value)`
[1] "2022-05-12"
Joining with `by = join_by(geo_value)`
[1] "2022-05-13"
Joining with `by = join_by(geo_value)`
[1] "2022-05-14"
Joining with `by = join_by(geo_value)`
[1] "2022-05-15"
Joining with `by = join_by(geo_value)`
[1] "2022-05-16"
Joining with `by = join_by(geo_value)`
[1] "2022-05-17"
Joining with `by = join_by(geo_value)`
[1] "2022-05-18"
Joining with `by = join_by(geo_value)`
[1] "2022-05-19"
Joining with `by = join_by(geo_value)`
[1] "2022-05-20"
Joining with `by = join_by(geo_value)`
[1] "2022-05-21"
Joining with `by = join_by(geo_value)`
[1] "2022-05-22"
Joining with `by = join_by(geo_value)`
[1] "2022-05-23"
Joining with `by = join_by(geo_value)`
[1] "2022-05-24"
Joining with `by = join_by(geo_value)`
[1] "2022-05-25"
Joining with `by = join_by(geo_value)`
[1] "2022-05-26"
Joining with `by = join_by(geo_value)`
[1] "2022-05-27"
Joining with `by = join_by(geo_value)`
[1] "2022-05-28"
Joining with `by = join_by(geo_value)`
[1] "2022-05-29"
Joining with `by = join_by(geo_value)`
[1] "2022-05-30"
Joining with `by = join_by(geo_value)`
[1] "2022-05-31"
Joining with `by = join_by(geo_value)`
[1] "2022-06-01"
Joining with `by = join_by(geo_value)`
[1] "2022-06-02"
Joining with `by = join_by(geo_value)`
[1] "2022-06-03"
Joining with `by = join_by(geo_value)`
[1] "2022-06-04"
Joining with `by = join_by(geo_value)`
[1] "2022-06-05"
Joining with `by = join_by(geo_value)`
[1] "2022-06-06"
Joining with `by = join_by(geo_value)`
[1] "2022-06-07"
Joining with `by = join_by(geo_value)`
[1] "2022-06-08"
Joining with `by = join_by(geo_value)`
[1] "2022-06-09"
Joining with `by = join_by(geo_value)`
[1] "2022-06-10"
Joining with `by = join_by(geo_value)`
[1] "2022-06-11"
Joining with `by = join_by(geo_value)`
[1] "2022-06-12"
Joining with `by = join_by(geo_value)`
[1] "2022-06-13"
Joining with `by = join_by(geo_value)`
[1] "2022-06-14"
Joining with `by = join_by(geo_value)`
[1] "2022-06-15"
Joining with `by = join_by(geo_value)`
[1] "2022-06-16"
Joining with `by = join_by(geo_value)`
[1] "2022-06-17"
Joining with `by = join_by(geo_value)`
[1] "2022-06-18"
Joining with `by = join_by(geo_value)`
[1] "2022-06-19"
Joining with `by = join_by(geo_value)`
[1] "2022-06-20"
Joining with `by = join_by(geo_value)`
[1] "2022-06-21"
Joining with `by = join_by(geo_value)`
[1] "2022-06-22"
Joining with `by = join_by(geo_value)`
[1] "2022-06-23"
Joining with `by = join_by(geo_value)`
[1] "2022-06-24"
Joining with `by = join_by(geo_value)`
[1] "2022-06-25"
Joining with `by = join_by(geo_value)`
[1] "2022-06-26"
Joining with `by = join_by(geo_value)`
[1] "2022-06-27"
Joining with `by = join_by(geo_value)`
[1] "2022-06-28"
Joining with `by = join_by(geo_value)`
[1] "2022-06-29"
Joining with `by = join_by(geo_value)`
[1] "2022-06-30"
Joining with `by = join_by(geo_value)`
[1] "2022-07-01"
Joining with `by = join_by(geo_value)`
[1] "2022-07-02"
Joining with `by = join_by(geo_value)`
[1] "2022-07-03"
Joining with `by = join_by(geo_value)`
[1] "2022-07-04"
Joining with `by = join_by(geo_value)`
[1] "2022-07-05"
Joining with `by = join_by(geo_value)`
[1] "2022-07-06"
Joining with `by = join_by(geo_value)`
[1] "2022-07-07"
Joining with `by = join_by(geo_value)`
[1] "2022-07-08"
Joining with `by = join_by(geo_value)`
[1] "2022-07-09"
Joining with `by = join_by(geo_value)`
[1] "2022-07-10"
Joining with `by = join_by(geo_value)`
[1] "2022-07-11"
Joining with `by = join_by(geo_value)`
[1] "2022-07-12"
Joining with `by = join_by(geo_value)`
[1] "2022-07-13"
Joining with `by = join_by(geo_value)`
[1] "2022-07-14"
Joining with `by = join_by(geo_value)`
[1] "2022-07-15"
Joining with `by = join_by(geo_value)`
[1] "2022-07-16"
Joining with `by = join_by(geo_value)`
[1] "2022-07-17"
Joining with `by = join_by(geo_value)`
[1] "2022-07-18"
Joining with `by = join_by(geo_value)`
[1] "2022-07-19"
Joining with `by = join_by(geo_value)`
[1] "2022-07-20"
Joining with `by = join_by(geo_value)`
[1] "2022-07-21"
Joining with `by = join_by(geo_value)`
[1] "2022-07-22"
Joining with `by = join_by(geo_value)`
[1] "2022-07-23"
Joining with `by = join_by(geo_value)`
[1] "2022-07-24"
Joining with `by = join_by(geo_value)`
[1] "2022-07-25"
Joining with `by = join_by(geo_value)`
[1] "2022-07-26"
Joining with `by = join_by(geo_value)`
[1] "2022-07-27"
Joining with `by = join_by(geo_value)`
[1] "2022-07-28"
Joining with `by = join_by(geo_value)`
[1] "2022-07-29"
Joining with `by = join_by(geo_value)`
[1] "2022-07-30"
Joining with `by = join_by(geo_value)`
[1] "2022-07-31"
Joining with `by = join_by(geo_value)`
[1] "2022-08-01"
Joining with `by = join_by(geo_value)`
[1] "2022-08-02"
Joining with `by = join_by(geo_value)`
[1] "2022-08-03"
Joining with `by = join_by(geo_value)`
[1] "2022-08-04"
Joining with `by = join_by(geo_value)`
[1] "2022-08-05"
Joining with `by = join_by(geo_value)`
[1] "2022-08-06"
Joining with `by = join_by(geo_value)`
[1] "2022-08-07"
Joining with `by = join_by(geo_value)`
[1] "2022-08-08"
Joining with `by = join_by(geo_value)`
[1] "2022-08-09"
Joining with `by = join_by(geo_value)`
[1] "2022-08-10"
Joining with `by = join_by(geo_value)`
[1] "2022-08-11"
Joining with `by = join_by(geo_value)`
[1] "2022-08-12"
Joining with `by = join_by(geo_value)`
[1] "2022-08-13"
Joining with `by = join_by(geo_value)`
[1] "2022-08-14"
Joining with `by = join_by(geo_value)`
[1] "2022-08-15"
Joining with `by = join_by(geo_value)`
[1] "2022-08-16"
Joining with `by = join_by(geo_value)`
[1] "2022-08-17"
Joining with `by = join_by(geo_value)`
[1] "2022-08-18"
Joining with `by = join_by(geo_value)`
[1] "2022-08-19"
Joining with `by = join_by(geo_value)`
[1] "2022-08-20"
Joining with `by = join_by(geo_value)`
[1] "2022-08-21"
Joining with `by = join_by(geo_value)`
[1] "2022-08-22"
Joining with `by = join_by(geo_value)`
[1] "2022-08-23"
Joining with `by = join_by(geo_value)`
[1] "2022-08-24"
Joining with `by = join_by(geo_value)`
[1] "2022-08-25"
Joining with `by = join_by(geo_value)`
[1] "2022-08-26"
Joining with `by = join_by(geo_value)`
[1] "2022-08-27"
Joining with `by = join_by(geo_value)`
[1] "2022-08-28"
Joining with `by = join_by(geo_value)`
[1] "2022-08-29"
Joining with `by = join_by(geo_value)`
[1] "2022-08-30"
Joining with `by = join_by(geo_value)`
[1] "2022-08-31"
Joining with `by = join_by(geo_value)`
[1] "2022-09-01"
Joining with `by = join_by(geo_value)`
[1] "2022-09-02"
Joining with `by = join_by(geo_value)`
[1] "2022-09-03"
Joining with `by = join_by(geo_value)`
[1] "2022-09-04"
Joining with `by = join_by(geo_value)`
[1] "2022-09-05"
Joining with `by = join_by(geo_value)`
[1] "2022-09-06"
Joining with `by = join_by(geo_value)`
[1] "2022-09-07"
Joining with `by = join_by(geo_value)`
[1] "2022-09-08"
Joining with `by = join_by(geo_value)`
[1] "2022-09-09"
Joining with `by = join_by(geo_value)`
[1] "2022-09-10"
Joining with `by = join_by(geo_value)`
[1] "2022-09-11"
Joining with `by = join_by(geo_value)`
[1] "2022-09-12"
Joining with `by = join_by(geo_value)`
[1] "2022-09-13"
Joining with `by = join_by(geo_value)`
[1] "2022-09-14"
Joining with `by = join_by(geo_value)`
[1] "2022-09-15"
Joining with `by = join_by(geo_value)`
[1] "2022-09-16"
Joining with `by = join_by(geo_value)`
[1] "2022-09-17"
Joining with `by = join_by(geo_value)`
[1] "2022-09-18"
Joining with `by = join_by(geo_value)`
[1] "2022-09-19"
Joining with `by = join_by(geo_value)`
[1] "2022-09-20"
Joining with `by = join_by(geo_value)`
[1] "2022-09-21"
Joining with `by = join_by(geo_value)`
[1] "2022-09-22"
Joining with `by = join_by(geo_value)`
[1] "2022-09-23"
Joining with `by = join_by(geo_value)`
[1] "2022-09-24"
Joining with `by = join_by(geo_value)`
[1] "2022-09-25"
Joining with `by = join_by(geo_value)`
[1] "2022-09-26"
Joining with `by = join_by(geo_value)`
[1] "2022-09-27"
Joining with `by = join_by(geo_value)`
[1] "2022-09-28"
Joining with `by = join_by(geo_value)`
[1] "2022-09-29"
Joining with `by = join_by(geo_value)`
[1] "2022-09-30"
Joining with `by = join_by(geo_value)`
[1] "2022-10-01"
Joining with `by = join_by(geo_value)`
[1] "2022-10-02"
Joining with `by = join_by(geo_value)`
[1] "2022-10-03"
Joining with `by = join_by(geo_value)`
[1] "2022-10-04"
Joining with `by = join_by(geo_value)`
[1] "2022-10-05"
Joining with `by = join_by(geo_value)`
[1] "2022-10-06"
Joining with `by = join_by(geo_value)`
[1] "2022-10-07"
Joining with `by = join_by(geo_value)`
[1] "2022-10-08"
Joining with `by = join_by(geo_value)`
[1] "2022-10-09"
Joining with `by = join_by(geo_value)`
[1] "2022-10-10"
Joining with `by = join_by(geo_value)`
[1] "2022-10-11"
Joining with `by = join_by(geo_value)`
[1] "2022-10-12"
Joining with `by = join_by(geo_value)`
[1] "2022-10-13"
Joining with `by = join_by(geo_value)`
[1] "2022-10-14"
Joining with `by = join_by(geo_value)`
[1] "2022-10-15"
Joining with `by = join_by(geo_value)`
[1] "2022-10-16"
Joining with `by = join_by(geo_value)`
[1] "2022-10-17"
Joining with `by = join_by(geo_value)`
[1] "2022-10-18"
Joining with `by = join_by(geo_value)`
[1] "2022-10-19"
Joining with `by = join_by(geo_value)`
[1] "2022-10-20"
Joining with `by = join_by(geo_value)`
[1] "2022-10-21"
Joining with `by = join_by(geo_value)`
[1] "2022-10-22"
Joining with `by = join_by(geo_value)`
[1] "2022-10-23"
Joining with `by = join_by(geo_value)`
[1] "2022-10-24"
Joining with `by = join_by(geo_value)`
[1] "2022-10-25"
Joining with `by = join_by(geo_value)`
[1] "2022-10-26"
Joining with `by = join_by(geo_value)`
[1] "2022-10-27"
Joining with `by = join_by(geo_value)`
[1] "2022-10-28"
Joining with `by = join_by(geo_value)`
[1] "2022-10-29"
Joining with `by = join_by(geo_value)`
[1] "2022-10-30"
Joining with `by = join_by(geo_value)`
[1] "2022-10-31"
Joining with `by = join_by(geo_value)`
[1] "2022-11-01"
Joining with `by = join_by(geo_value)`
[1] "2022-11-02"
Joining with `by = join_by(geo_value)`
[1] "2022-11-03"
Joining with `by = join_by(geo_value)`
[1] "2022-11-04"
Joining with `by = join_by(geo_value)`
[1] "2022-11-05"
Joining with `by = join_by(geo_value)`
[1] "2022-11-06"
Joining with `by = join_by(geo_value)`
[1] "2022-11-07"
Joining with `by = join_by(geo_value)`
[1] "2022-11-08"
Joining with `by = join_by(geo_value)`
[1] "2022-11-09"
Joining with `by = join_by(geo_value)`
[1] "2022-11-10"
Joining with `by = join_by(geo_value)`
[1] "2022-11-11"
Joining with `by = join_by(geo_value)`
[1] "2022-11-12"
Joining with `by = join_by(geo_value)`
[1] "2022-11-13"
Joining with `by = join_by(geo_value)`
[1] "2022-11-14"
Joining with `by = join_by(geo_value)`
[1] "2022-11-15"
Joining with `by = join_by(geo_value)`
[1] "2022-11-16"
Joining with `by = join_by(geo_value)`
[1] "2022-11-17"
Joining with `by = join_by(geo_value)`
[1] "2022-11-18"
Joining with `by = join_by(geo_value)`
[1] "2022-11-19"
Joining with `by = join_by(geo_value)`
[1] "2022-11-20"
Joining with `by = join_by(geo_value)`
[1] "2022-11-21"
Joining with `by = join_by(geo_value)`
[1] "2022-11-22"
Joining with `by = join_by(geo_value)`
[1] "2022-11-23"
Joining with `by = join_by(geo_value)`
[1] "2022-11-24"
Joining with `by = join_by(geo_value)`
[1] "2022-11-25"
Joining with `by = join_by(geo_value)`
[1] "2022-11-26"
Joining with `by = join_by(geo_value)`
[1] "2022-11-27"
Joining with `by = join_by(geo_value)`
[1] "2022-11-28"
Joining with `by = join_by(geo_value)`
[1] "2022-11-29"
Joining with `by = join_by(geo_value)`
[1] "2022-11-30"
Joining with `by = join_by(geo_value)`
[1] "2022-12-01"
Joining with `by = join_by(geo_value)`
[1] "2022-12-02"
Joining with `by = join_by(geo_value)`
[1] "2022-12-03"
Joining with `by = join_by(geo_value)`
[1] "2022-12-04"
Joining with `by = join_by(geo_value)`
[1] "2022-12-05"
Joining with `by = join_by(geo_value)`
[1] "2022-12-06"
Joining with `by = join_by(geo_value)`
[1] "2022-12-07"
Joining with `by = join_by(geo_value)`
[1] "2022-12-08"
Joining with `by = join_by(geo_value)`
[1] "2022-12-09"
Joining with `by = join_by(geo_value)`
[1] "2022-12-10"
Joining with `by = join_by(geo_value)`
[1] "2022-12-11"
Joining with `by = join_by(geo_value)`
[1] "2022-12-12"
Joining with `by = join_by(geo_value)`
[1] "2022-12-13"
Joining with `by = join_by(geo_value)`
[1] "2022-12-14"
Joining with `by = join_by(geo_value)`
[1] "2022-12-15"
Joining with `by = join_by(geo_value)`
[1] "2022-12-16"
Joining with `by = join_by(geo_value)`
[1] "2022-12-17"
Joining with `by = join_by(geo_value)`
[1] "2022-12-18"
Joining with `by = join_by(geo_value)`
[1] "2022-12-19"
Joining with `by = join_by(geo_value)`
[1] "2022-12-20"
Joining with `by = join_by(geo_value)`
[1] "2022-12-21"
Joining with `by = join_by(geo_value)`
[1] "2022-12-22"
Joining with `by = join_by(geo_value)`
[1] "2022-12-23"
Joining with `by = join_by(geo_value)`
[1] "2022-12-24"
Joining with `by = join_by(geo_value)`
[1] "2022-12-25"
Joining with `by = join_by(geo_value)`
[1] "2022-12-26"
Joining with `by = join_by(geo_value)`
[1] "2022-12-27"
Joining with `by = join_by(geo_value)`
[1] "2022-12-28"
Joining with `by = join_by(geo_value)`
[1] "2022-12-29"
Joining with `by = join_by(geo_value)`
[1] "2022-12-30"
Joining with `by = join_by(geo_value)`
[1] "2022-12-31"
Joining with `by = join_by(geo_value)`
[1] "2023-01-01"
[1] "2023-01-02"
Joining with `by = join_by(geo_value)`
[1] "2023-01-03"
Joining with `by = join_by(geo_value)`
[1] "2023-01-04"
Joining with `by = join_by(geo_value)`
[1] "2023-01-05"
Joining with `by = join_by(geo_value)`
[1] "2023-01-06"
Joining with `by = join_by(geo_value)`
[1] "2023-01-07"
Joining with `by = join_by(geo_value)`
[1] "2023-01-08"
Joining with `by = join_by(geo_value)`
[1] "2023-01-09"
Joining with `by = join_by(geo_value)`
[1] "2023-01-10"
Joining with `by = join_by(geo_value)`
[1] "2023-01-11"
Joining with `by = join_by(geo_value)`
[1] "2023-01-12"
Joining with `by = join_by(geo_value)`
[1] "2023-01-13"
Joining with `by = join_by(geo_value)`
[1] "2023-01-14"
Joining with `by = join_by(geo_value)`
[1] "2023-01-15"
Joining with `by = join_by(geo_value)`
[1] "2023-01-16"
Joining with `by = join_by(geo_value)`
[1] "2023-01-17"
Joining with `by = join_by(geo_value)`
[1] "2023-01-18"
Joining with `by = join_by(geo_value)`
[1] "2023-01-19"
Joining with `by = join_by(geo_value)`
[1] "2023-01-20"
Joining with `by = join_by(geo_value)`
[1] "2023-01-21"
Joining with `by = join_by(geo_value)`
[1] "2023-01-22"
Joining with `by = join_by(geo_value)`
[1] "2023-01-23"
Joining with `by = join_by(geo_value)`
[1] "2023-01-24"
Joining with `by = join_by(geo_value)`
[1] "2023-01-25"
Joining with `by = join_by(geo_value)`
[1] "2023-01-26"
Joining with `by = join_by(geo_value)`
[1] "2023-01-27"
Joining with `by = join_by(geo_value)`
[1] "2023-01-28"
Joining with `by = join_by(geo_value)`
[1] "2023-01-29"
Joining with `by = join_by(geo_value)`
[1] "2023-01-30"
Joining with `by = join_by(geo_value)`
[1] "2023-01-31"
Joining with `by = join_by(geo_value)`
[1] "2023-02-01"
Joining with `by = join_by(geo_value)`
[1] "2023-02-02"
Joining with `by = join_by(geo_value)`
[1] "2023-02-03"
Joining with `by = join_by(geo_value)`
[1] "2023-02-04"
Joining with `by = join_by(geo_value)`
[1] "2023-02-05"
Joining with `by = join_by(geo_value)`
[1] "2023-02-06"
Joining with `by = join_by(geo_value)`
[1] "2023-02-07"
Joining with `by = join_by(geo_value)`
[1] "2023-02-08"
Joining with `by = join_by(geo_value)`
[1] "2023-02-09"
Joining with `by = join_by(geo_value)`
[1] "2023-02-10"
Joining with `by = join_by(geo_value)`
[1] "2023-02-11"
Joining with `by = join_by(geo_value)`
[1] "2023-02-12"
Joining with `by = join_by(geo_value)`
[1] "2023-02-13"
Joining with `by = join_by(geo_value)`
[1] "2023-02-14"
Joining with `by = join_by(geo_value)`
[1] "2023-02-15"
Joining with `by = join_by(geo_value)`
[1] "2023-02-16"
Joining with `by = join_by(geo_value)`
[1] "2023-02-17"
Joining with `by = join_by(geo_value)`
[1] "2023-02-18"
Joining with `by = join_by(geo_value)`
[1] "2023-02-19"
Joining with `by = join_by(geo_value)`
[1] "2023-02-20"
Joining with `by = join_by(geo_value)`
[1] "2023-02-21"
Joining with `by = join_by(geo_value)`
[1] "2023-02-22"
Joining with `by = join_by(geo_value)`
[1] "2023-02-23"
Joining with `by = join_by(geo_value)`
[1] "2023-02-24"
Joining with `by = join_by(geo_value)`
[1] "2023-02-25"
Joining with `by = join_by(geo_value)`
[1] "2023-02-26"
Joining with `by = join_by(geo_value)`
[1] "2023-02-27"
Joining with `by = join_by(geo_value)`
[1] "2023-02-28"
Joining with `by = join_by(geo_value)`
[1] "2023-03-01"
Joining with `by = join_by(geo_value)`
[1] "2023-03-02"
Joining with `by = join_by(geo_value)`
[1] "2023-03-03"
Joining with `by = join_by(geo_value)`
[1] "2023-03-04"
Joining with `by = join_by(geo_value)`
[1] "2023-03-05"
Joining with `by = join_by(geo_value)`
[1] "2023-03-06"
Joining with `by = join_by(geo_value)`
[1] "2023-03-07"
Joining with `by = join_by(geo_value)`
[1] "2023-03-08"
Joining with `by = join_by(geo_value)`
[1] "2023-03-09"
Joining with `by = join_by(geo_value)`
[1] "2023-03-10"
Joining with `by = join_by(geo_value)`
[1] "2023-03-11"
Joining with `by = join_by(geo_value)`
[1] "2023-03-12"
Joining with `by = join_by(geo_value)`
[1] "2023-03-13"
Joining with `by = join_by(geo_value)`
[1] "2023-03-14"
Joining with `by = join_by(geo_value)`
[1] "2023-03-15"
Joining with `by = join_by(geo_value)`
[1] "2023-03-16"
Joining with `by = join_by(geo_value)`
[1] "2023-03-17"
Joining with `by = join_by(geo_value)`
[1] "2023-03-18"
Joining with `by = join_by(geo_value)`
[1] "2023-03-19"
Joining with `by = join_by(geo_value)`
[1] "2023-03-20"
Joining with `by = join_by(geo_value)`
[1] "2023-03-21"
Joining with `by = join_by(geo_value)`
[1] "2023-03-22"
Joining with `by = join_by(geo_value)`
[1] "2023-03-23"
Joining with `by = join_by(geo_value)`
[1] "2023-03-24"
Joining with `by = join_by(geo_value)`
[1] "2023-03-25"
Joining with `by = join_by(geo_value)`
[1] "2023-03-26"
Joining with `by = join_by(geo_value)`
[1] "2023-03-27"
Joining with `by = join_by(geo_value)`
[1] "2023-03-28"
Joining with `by = join_by(geo_value)`
[1] "2023-03-29"
Joining with `by = join_by(geo_value)`
[1] "2023-03-30"
Joining with `by = join_by(geo_value)`
[1] "2023-03-31"
Joining with `by = join_by(geo_value)`
[1] "2023-04-01"
Joining with `by = join_by(geo_value)`
[1] "2023-04-02"
Joining with `by = join_by(geo_value)`
[1] "2023-04-03"
Joining with `by = join_by(geo_value)`
[1] "2023-04-04"
Joining with `by = join_by(geo_value)`
[1] "2023-04-05"
Joining with `by = join_by(geo_value)`
[1] "2023-04-06"
Joining with `by = join_by(geo_value)`
[1] "2023-04-07"
Joining with `by = join_by(geo_value)`
[1] "2023-04-08"
Joining with `by = join_by(geo_value)`
[1] "2023-04-09"
Joining with `by = join_by(geo_value)`
[1] "2023-04-10"
Joining with `by = join_by(geo_value)`
[1] "2023-04-11"
Joining with `by = join_by(geo_value)`
[1] "2023-04-12"
Joining with `by = join_by(geo_value)`
[1] "2023-04-13"
Joining with `by = join_by(geo_value)`
[1] "2023-04-14"
Joining with `by = join_by(geo_value)`
[1] "2023-04-15"
Joining with `by = join_by(geo_value)`
[1] "2023-04-16"
Joining with `by = join_by(geo_value)`
[1] "2023-04-17"
Joining with `by = join_by(geo_value)`
[1] "2023-04-18"
Joining with `by = join_by(geo_value)`
[1] "2023-04-19"
Joining with `by = join_by(geo_value)`
[1] "2023-04-20"
Joining with `by = join_by(geo_value)`
[1] "2023-04-21"
Joining with `by = join_by(geo_value)`
[1] "2023-04-22"
Joining with `by = join_by(geo_value)`
[1] "2023-04-23"
Joining with `by = join_by(geo_value)`
[1] "2023-04-24"
Joining with `by = join_by(geo_value)`
[1] "2023-04-25"
Joining with `by = join_by(geo_value)`
[1] "2023-04-26"
Joining with `by = join_by(geo_value)`
[1] "2023-04-27"
Joining with `by = join_by(geo_value)`
[1] "2023-04-28"
Joining with `by = join_by(geo_value)`
[1] "2023-04-29"
Joining with `by = join_by(geo_value)`
[1] "2023-04-30"
Joining with `by = join_by(geo_value)`
[1] "2023-05-01"
Joining with `by = join_by(geo_value)`
[1] "2023-05-02"
Joining with `by = join_by(geo_value)`
[1] "2023-05-03"
Joining with `by = join_by(geo_value)`
[1] "2023-05-04"
Joining with `by = join_by(geo_value)`
[1] "2023-05-05"
Joining with `by = join_by(geo_value)`
[1] "2023-05-06"
Joining with `by = join_by(geo_value)`
[1] "2023-05-07"
Joining with `by = join_by(geo_value)`
[1] "2023-05-08"
Joining with `by = join_by(geo_value)`
[1] "2023-05-09"
Joining with `by = join_by(geo_value)`
[1] "2023-05-10"
Joining with `by = join_by(geo_value)`
[1] "2023-05-11"
Joining with `by = join_by(geo_value)`
[1] "2023-05-12"
Joining with `by = join_by(geo_value)`
[1] "2023-05-13"
Joining with `by = join_by(geo_value)`
[1] "2023-05-14"
Joining with `by = join_by(geo_value)`
[1] "2023-05-15"
Joining with `by = join_by(geo_value)`
[1] "2023-05-16"
Joining with `by = join_by(geo_value)`
[1] "2023-05-17"
Joining with `by = join_by(geo_value)`
[1] "2023-05-18"
Joining with `by = join_by(geo_value)`
[1] "2023-05-19"
Joining with `by = join_by(geo_value)`
[1] "2023-05-20"
Joining with `by = join_by(geo_value)`
[1] "2023-05-21"
Joining with `by = join_by(geo_value)`
[1] "2023-05-22"
Joining with `by = join_by(geo_value)`
[1] "2023-05-23"
Joining with `by = join_by(geo_value)`
[1] "2023-05-24"
Joining with `by = join_by(geo_value)`
[1] "2023-05-25"
Joining with `by = join_by(geo_value)`
[1] "2023-05-26"
Joining with `by = join_by(geo_value)`
[1] "2023-05-27"
Joining with `by = join_by(geo_value)`
[1] "2023-05-28"
Joining with `by = join_by(geo_value)`
[1] "2023-05-29"
Joining with `by = join_by(geo_value)`
[1] "2023-05-30"
[1] "2023-05-31"
Joining with `by = join_by(geo_value)`
[1] "2023-06-01"
Joining with `by = join_by(geo_value)`
[1] "2023-06-02"
Joining with `by = join_by(geo_value)`
[1] "2023-06-03"
Joining with `by = join_by(geo_value)`
[1] "2023-06-04"
Joining with `by = join_by(geo_value)`
[1] "2023-06-05"
Joining with `by = join_by(geo_value)`
[1] "2023-06-06"
Joining with `by = join_by(geo_value)`
[1] "2023-06-07"
Joining with `by = join_by(geo_value)`
[1] "2023-06-08"
Joining with `by = join_by(geo_value)`
[1] "2023-06-09"
Joining with `by = join_by(geo_value)`
[1] "2023-06-10"
Joining with `by = join_by(geo_value)`
[1] "2023-06-11"
Joining with `by = join_by(geo_value)`
[1] "2023-06-12"
Joining with `by = join_by(geo_value)`
[1] "2023-06-13"
Joining with `by = join_by(geo_value)`
[1] "2023-06-14"
Joining with `by = join_by(geo_value)`
[1] "2023-06-15"
Joining with `by = join_by(geo_value)`
[1] "2023-06-16"
Joining with `by = join_by(geo_value)`
[1] "2023-06-17"
Joining with `by = join_by(geo_value)`
[1] "2023-06-18"
Joining with `by = join_by(geo_value)`
[1] "2023-06-19"
Joining with `by = join_by(geo_value)`
[1] "2023-06-20"
Joining with `by = join_by(geo_value)`
[1] "2023-06-21"
Joining with `by = join_by(geo_value)`
[1] "2023-06-22"
Joining with `by = join_by(geo_value)`
[1] "2023-06-23"
Joining with `by = join_by(geo_value)`
[1] "2023-06-24"
Joining with `by = join_by(geo_value)`
[1] "2023-06-25"
Joining with `by = join_by(geo_value)`
[1] "2023-06-26"
Joining with `by = join_by(geo_value)`
[1] "2023-06-27"
Joining with `by = join_by(geo_value)`
[1] "2023-06-28"
Joining with `by = join_by(geo_value)`
[1] "2023-06-29"
Joining with `by = join_by(geo_value)`
[1] "2023-06-30"
Joining with `by = join_by(geo_value)`
[1] "2023-07-01"
Joining with `by = join_by(geo_value)`
[1] "2023-07-02"
Joining with `by = join_by(geo_value)`
[1] "2023-07-03"
Joining with `by = join_by(geo_value)`
[1] "2023-07-04"
Joining with `by = join_by(geo_value)`
[1] "2023-07-05"
Joining with `by = join_by(geo_value)`
[1] "2023-07-06"
Joining with `by = join_by(geo_value)`
[1] "2023-07-07"
Joining with `by = join_by(geo_value)`
[1] "2023-07-08"
Joining with `by = join_by(geo_value)`
[1] "2023-07-09"
Joining with `by = join_by(geo_value)`
[1] "2023-07-10"
Joining with `by = join_by(geo_value)`
[1] "2023-07-11"
Joining with `by = join_by(geo_value)`
[1] "2023-07-12"
Joining with `by = join_by(geo_value)`
[1] "2023-07-13"
Joining with `by = join_by(geo_value)`
[1] "2023-07-14"
Joining with `by = join_by(geo_value)`
[1] "2023-07-15"
Joining with `by = join_by(geo_value)`
[1] "2023-07-16"
Joining with `by = join_by(geo_value)`
[1] "2023-07-17"
Joining with `by = join_by(geo_value)`
[1] "2023-07-18"
Joining with `by = join_by(geo_value)`
[1] "2023-07-19"
Joining with `by = join_by(geo_value)`
[1] "2023-07-20"
Joining with `by = join_by(geo_value)`
[1] "2023-07-21"
Joining with `by = join_by(geo_value)`
[1] "2023-07-22"
Joining with `by = join_by(geo_value)`
[1] "2023-07-23"
Joining with `by = join_by(geo_value)`
[1] "2023-07-24"
Joining with `by = join_by(geo_value)`
[1] "2023-07-25"
Joining with `by = join_by(geo_value)`
[1] "2023-07-26"
Joining with `by = join_by(geo_value)`
[1] "2023-07-27"
Joining with `by = join_by(geo_value)`
[1] "2023-07-28"
Joining with `by = join_by(geo_value)`
[1] "2023-07-29"
Joining with `by = join_by(geo_value)`
[1] "2023-07-30"
Joining with `by = join_by(geo_value)`
[1] "2023-07-31"
Joining with `by = join_by(geo_value)`
[1] "2023-08-01"
Joining with `by = join_by(geo_value)`
There were 12 warnings (use warnings() to see them)
> 
> 
> write.csv(back_2, "../predictions/oneshot_omicron.csv", row.names = FALSE)
> 
> 
> 
> proc.time()
    user   system  elapsed 
85557.76 25053.73 90879.69 
